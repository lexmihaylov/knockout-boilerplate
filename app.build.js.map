{"version":3,"sources":["vendor/knockout/dist/knockout.debug.js","vendor/text/text.js","text!components/application-main/template.html","vendor/pubsubjs/pubsub.js","app/services/signal.js","vendor/require-less/normalize.js","vendor/require-less/less.js","vendor/require-less/less!components/application-main/style","text!components/navigation-bar/template.html","app/services/page-manager.js","vendor/require-less/less!components/navigation-bar/style","app/components/navigation-bar/index.js","text!components/side-bar/template.html","vendor/require-less/less!components/side-bar/style","app/components/side-bar/index.js","text!components/presentation-view/template.html","vendor/require-less/less!components/presentation-view/style","app/components/presentation-view/index.js","app/components/application-main/index.js","app/main.js","../../../onLayerEnd0.js"],"names":["DEBUG","undefined","window","this","eval","document","navigator","jQueryInstance","JSON","factory","define","exports","module","koExports","amdRequire","valuesArePrimitiveAndEqual","a","b","oldValueIsPrimitive","primitiveTypes","throttle","callback","timeout","timeoutInstance","ko","utils","setTimeout","debounce","clearTimeout","applyExtenders","requestedExtenders","target","objectForEach","key","value","extenderHandler","extenders","limitNotifySubscribers","event","defaultEvent","_limitBeforeChange","_origNotifySubscribers","_limitChange","computedDisposeDependencyCallback","id","entryToDispose","dispose","computedBeginDependencyDetectionCallback","subscribable","computedObservable","state","computedState","isDisposed","disposalCount","disposalCandidates","addDependencyTracking","dependencyTracking","isSleeping","_target","subscribeToDependency","makeEventHandlerShortcut","eventName","bindingHandlers","init","element","valueAccessor","allBindings","viewModel","bindingContext","newValueAccessor","result","call","makeWithIfBinding","bindingKey","isWith","isNot","makeContextCallback","didDisplayOnLastUpdate","savedNodes","computed","dataValue","unwrapObservable","shouldDisplay","isFirstRender","needsRefresh","computedContext","getDependenciesCount","cloneNodes","virtualElements","childNodes","setDomNodeChildren","applyBindingsToDescendants","emptyNode","disposeWhenNodeIsRemoved","controlsDescendantBindings","expressionRewriting","bindingRewriteValidators","allowedBindings","exportSymbol","koPath","object","tokens","split","i","length","exportProperty","owner","publicName","version","options","deferUpdates","useOnlyNativeEvents","obj","action","prop","hasOwnProperty","extend","source","setPrototypeOf","proto","__proto__","isClickOnCheckableElement","eventType","tagNameLower","type","toLowerCase","inputType","toggleDomNodeCssClass","node","classNames","shouldHaveClass","addOrRemoveFn","classList","arrayForEach","match","cssClassNameRegex","className","toggleObjectClassPropertyString","currentClassNames","addOrRemoveItem","join","canSetPrototype","Array","canUseSymbols","Symbol","knownEvents","knownEventTypesByEventName","keyEventTypeName","test","userAgent","knownEventsForType","j","eventsThatMustBeRegisteredUsingAttachEvent","propertychange","ieVersion","div","createElement","iElems","getElementsByTagName","innerHTML","isIe6","isIe7","fieldsIncludedWithJsonPost","array","arrayIndexOf","item","prototype","indexOf","arrayFirst","predicate","predicateOwner","arrayRemoveItem","itemToRemove","index","splice","shift","arrayGetDistinctValues","push","arrayMap","mapping","arrayFilter","arrayPushAll","valuesToPush","apply","included","existingEntryIndex","peekObservable","setPrototypeOfOrExtend","objectMap","emptyDomNode","domNode","firstChild","removeNode","moveCleanedNodesToContainerElement","nodes","nodesArray","makeArray","templateDocument","ownerDocument","container","appendChild","cleanNode","shouldCleanNodes","newNodesArray","clonedNode","cloneNode","replaceDomNodes","nodeToReplaceOrNodeArray","nodesToReplaceArray","nodeType","insertionPoint","parent","parentNode","insertBefore","fixUpContinuousNodeArray","continuousNodeArray","current","last","nextSibling","setOptionNodeSelectionState","optionNode","isSelected","setAttribute","selected","stringTrim","string","trim","toString","replace","stringStartsWith","startsWith","substring","domNodeIsContainedBy","containedByNode","contains","compareDocumentPosition","domNodeIsAttachedToDocument","documentElement","anyDomNodeIsAttachedToDocument","tagName","catchFunctionErrors","delegate","arguments","e","handler","deferError","error","registerEventHandler","wrappedHandler","mustUseAttachEvent","addEventListener","attachEvent","Error","attachEventHandler","attachEventName","domNodeDisposal","addDisposeCallback","detachEvent","triggerEvent","useClickWorkaround","createEvent","dispatchEvent","eventCategory","initEvent","click","fireEvent","isObservable","peek","setTextContent","textContent","innerTextNode","createTextNode","data","forceRefresh","setElementName","name","mergeAttributes","elem","style","zoom","ensureSelectElementIsRenderedCorrectly","selectElement","originalWidth","width","range","min","max","arrayLikeObject","createSymbolOrString","identifier","getFormFields","form","fieldName","fields","concat","isMatchingField","field","matches","parseJson","jsonString","parse","Function","stringifyJson","replacer","space","stringify","postJson","urlOrForm","params","includeFields","url","originalForm","display","method","input","body","submit","removeChild","originalFunction","partialArgs","slice","args","domData","getAll","createIfNotFound","dataStoreKey","dataStoreKeyExpandoPropertyName","hasExistingDataStore","dataStore","uniqueId","Date","getTime","get","allDataForNode","set","clear","nextKey","getDisposeCallbacksCollection","allDisposeCallbacks","domDataKey","destroyCallbacksCollection","cleanSingleNode","callbacks","cleanableNodeTypesWithDescendants","cleanImmediateCommentTypeChildren","nodeWithChildren","child","nextChild","cleanableNodeTypes",1,8,9,"removeDisposeCallback","callbacksCollection","descendants","cleanExternalData","getWrap","tags","m","lookup","none","simpleHtmlParse","html","documentContext","windowContext","wrap","depth","markup","mayRequireCreateElementHack","lastChild","jQueryHtmlParse","elems","table","tbody","tr","select","thead","tfoot","td","th","option","optgroup","parseHtmlFragment","setHtml","parsedNodes","memoization","randomMax8HexChars","Math","random","generateRandomId","findMemoNodes","rootNode","appendToArray","memoId","parseMemoText","nodeValue","memos","memoize","unmemoize","callbackParams","unmemoizeDomNodeAndDescendants","extraCallbackParamsArray","combinedParams","memoText","tasks","processTasks","taskQueueLength","task","mark","countMarks","nextIndexToProcess","taskQueue","ex","scheduledProcess","scheduleTaskProcessing","scheduler","nextHandle","MutationObserver","observe","attributes","toggle","script","onreadystatechange","schedule","func","cancel","handle","resetForTesting","runEarly","writeTimeoutInstance","dependentObservable","read","write","rateLimit","limitFunction","_deferUpdates","limit","deferred","notify","notifyWhen","boolean","number","subscription","disposeCallback","ko_subscribable_fn","instance","_subscriptions","_versionNumber","subscribe","callbackTarget","self","boundCallback","bind","afterSubscriptionRemove","beforeSubscriptionAdd","notifySubscribers","valueToNotify","updateVersion","hasSubscriptionsForEvent","dependencyDetection","begin","end","getVersion","hasChanged","versionToCheck","ignoreBeforeChange","previousValue","pendingValue","selfIsObservable","beforeChange","finish","_notificationIsPending","isDifferent","getSubscriptionsCount","total","subscriptions","oldValue","newValue","isSubscribable","getId","lastId","outerFrames","currentFrame","pop","registerDependency","_id","ignore","callbackArgs","isInitial","ignoreDependencies","observableLatestValue","observable","initialValue","valueWillMutate","valueHasMutated","observableFn","equalityComparer","protoProperty","hasPrototype","isWriteableObservable","observableArray","initialValues","trackArrayChanges","remove","valueOrPredicate","underlyingArray","removedValues","removeAll","arrayOfValues","allValues","destroy","destroyAll","oldItem","newItem","methodName","cacheDiffForKnownOperation","methodCallResult","arrayChangeEventName","trackChanges","trackingChanges","underlyingNotifySubscribersFunction","pendingNotifications","previousContents","cachedDiff","arrayChangeSubscription","currentContents","changes","getChanges","compareArrays","compareArrayOptions","underlyingBeforeSubscriptionAddFunction","underlyingAfterSubscriptionRemoveFunction","rawArray","operationName","pushDiff","status","diff","arrayLength","argsLength","offset","startIndex","endDeleteIndex","endAddIndex","endIndex","additions","deletions","argsIndex","findMovesInArrayComparison","evaluatorFunctionOrOptions","evaluatorFunctionTarget","writeFunction","isStale","haveDependenciesChanged","evaluateImmediate","latestValue","isBeingEvaluated","suppressDisposalUntilDisposeWhenReturnsFalse","pure","readFunction","disposeWhen","domNodeDisposalCallback","dependenciesCount","evaluationTimeoutInstance","hasWriteFunction","computedFn","pureComputedOverrides","deferEvaluationOverrides","isActive","trackingObj","_order","_version","dependency","markDirty","_evalDelayed","respondToChange","evaluatePossiblyAsync","dirtySub","changeSub","throttleEvaluationTimeout","notifyChange","evaluateImmediate_CallReadWithDependencyDetection","dependencyDetectionContext","evaluateImmediate_CallReadThenEndDependencyDetection","dependeciesOrder","order","protoProp","isComputed","isPureComputed","pureComputed","mapJsObjectGraph","rootObject","mapInputCallback","visitedObjects","objectLookup","canHaveProperties","RegExp","String","Number","Boolean","outputProperties","save","visitPropertiesOrArrayEntries","indexer","propertyValue","previouslyMappedValue","visitorCallback","propertyName","keys","values","maxNestedObservableDepth","toJS","valueToMap","toJSON","plainJavaScriptObject","constructor","existingIndex","hasDomDataExpandoProperty","selectExtensions","readValue","optionValueDomDataKey","getAttributeNode","specified","text","selectedIndex","writeValue","allowUnset","optionValue","selection","n","size","getWriteableValue","expression","javaScriptReservedWords","javaScriptAssignmentTarget","parseObjectLiteral","objectLiteralString","str","charCodeAt","toks","bindingToken","tok","c","unknown","divisionLookBehind","keywordRegexLookBehind","substr","preProcessBindings","bindingsStringOrKeyValueArray","bindingOptions","processKeyValue","val","callPreprocessHook","writableVal","bindingParams","twoWayBindings","propertyAccessorResultStrings","makeValueAccessors","resultStrings","keyValueArray","keyValue","stringDouble","stringSingle","stringRegexp","specials","everyThingElse","oneNotSpace","in","return","typeof","keyValueArrayContainsKey","writeValueToProperty","property","checkIfDifferent","propWriters","isStartComment","startCommentRegex","commentNodesHaveTextProperty","isEndComment","endCommentRegex","getVirtualChildren","startComment","allowUnbalanced","currentNode","children","getMatchingEndComment","allVirtualChildren","getUnbalancedChildTags","childNode","captureRemaining","matchingEndComment","createComment","htmlTagsWithOptionallyClosingChildren","ul","ol","virtualChildren","endCommentNode","prepend","containerNode","nodeToPrepend","insertAfter","nodeToInsert","insertAfterNode","hasBindingValue","virtualNodeBindingValue","regexMatch","normaliseVirtualElementDomStructure","elementVerified","unbalancedTags","nodeToInsertBefore","createBindingsStringEvaluatorViaCache","bindingsString","cache","cacheKey","createBindingsStringEvaluator","rewrittenBindings","functionBody","defaultBindingAttributeName","bindingProvider","bindingCache","nodeHasBindings","getAttribute","components","getBindings","parsedBindings","addBindingsForCustomElement","getBindingAccessors","valueAccessors","getBindingsString","parseBindingsString","bindingFunction","message","makeValueAccessor","evaluateValueAccessor","makeAccessorsFromFunction","makeBindingAccessors","bindings","context","getBindingsAndMakeAccessors","validateThatBindingIsAllowedForVirtualElements","bindingName","validator","applyBindingsToDescendantsInternal","elementOrVirtualElement","bindingContextsMayDifferFromDomParentElement","currentChild","nextInQueue","provider","preprocessNode","applyBindingsToNodeAndDescendantsInternal","nodeVerified","bindingContextMayDifferFromDomParentElement","shouldBindDescendants","isElement","shouldApplyBindings","applyBindingsToNodeInternal","bindingDoesNotRecurseIntoElementTypes","topologicalSortBindings","bindingsConsidered","cyclicDependencyStack","pushBinding","binding","bindingDependencyKey","sourceBindings","bindingsUpdater","alreadyBound","boundElementDomDataKey","storedBindingContextForNode","_subscribable","bindingHandlerThatControlsDescendantBindings","getValueAccessor","orderedBindings","bindingKeyAndHandler","handlerInitFn","handlerUpdateFn","initResult","getBindingContext","viewModelOrBindingContext","textarea","template","dataItemOrAccessor","parentContext","dataItemAlias","extendCallback","updateContext","dataItemOrObservable","isFunc","dataItem","_addNode","unshift","properties","storedBindingContextDomDataKey","applyBindingAccessorsToNode","applyBindingsToNode","applyBindings","contextFor","dataFor","getObjectOwnProperty","propName","loadComponentAndNotify","componentName","completedAsync","loadingSubscribablesCache","beginLoadingComponent","definition","config","isSynchronousComponent","loadedDefinitionsCache","getFirstResultFromLoaders","argsExceptCallback","candidateLoaders","currentCandidateLoader","methodInstance","wasAborted","synchronousReturnValue","cachedDefinition","clearCachedDefinition","_getFirstResultFromLoaders","resolveConfig","errorCallback","makeCallBackWhenZero","tryIssueCallback","templateConfig","viewModelConfig","possiblyGetConfigFromAmd","loadedConfig","resolvedTemplate","resolvedViewModel","createViewModelKey","resolveTemplate","isDocumentFragment","isDomElement","cloneNodesFromTemplateSourceElement","elemInstance","getElementById","resolveViewModel","fixedInstance","componentInfo","content","HTMLElement","DocumentFragment","makeErrorCallback","defaultConfigRegistry","register","isRegistered","unregister","defaultLoader","getConfig","loadComponent","loadTemplate","loadViewModel","_allRegisteredComponents","getComponentParamsFromCustomElement","paramsAttribute","nativeBindingProviderInstance","rawParamComputedValues","paramValue","paramName","paramValueComputed","$raw","componentBindingValue","createDocumentFragment","newDocFrag","allComponents","cloneTemplateIntoElement","componentDefinition","clonedNodesArray","createViewModel","originalChildNodes","componentParams","componentViewModelFactory","templateNodes","componentLoadingOperationUniqueId","ignored1","ignored2","currentViewModel","currentLoadingOperationId","disposeAssociatedComponentViewModel","currentViewModelDispose","loadingOperationId","componentViewModel","childBindingContext","ctx","attrHtmlToJavascriptMap","class","for","update","attrName","attrValue","toRemove","removeAttribute","after","updateModel","isChecked","checked","elemValue","useCheckedValue","checkedValue","isRadio","modelValue","valueIsArray","writableValue","rawValueIsNonArrayObservable","oldElemValue","updateView","isCheckbox","rawValue","classesWrittenByBindingKey","disabled","eventsToHandle","handlerReturnValue","handlerFunction","argsForHandler","preventDefault","returnValue","bubble","cancelBubble","stopPropagation","makeTemplateValueAccessor","unwrappedValue","foreach","as","includeDestroyed","afterAdd","beforeRemove","afterRender","beforeMove","afterMove","templateEngine","nativeTemplateEngine","hasfocusUpdatingProperty","hasfocusLastValue","handleElementFocusChange","isFocused","ownerDoc","active","activeElement","handleElementFocusIn","handleElementFocusOut","focus","blur","captionPlaceholder","selectedOptions","applyToObject","defaultValue","predicateType","optionForArrayItem","arrayEntry","oldOptions","previousSelectedValues","valueAllowUnset","itemUpdate","optionText","setSelectionCallback","newOptions","captionValue","filteredArray","selectWasPreviouslyEmpty","multiple","previousScrollTop","scrollTop","unwrappedArray","arrayToDomNodeChildrenOptions","setDomNodeChildrenFromArrayMapping","selectionChanged","abs","valueToWrite","styleName","styleValue","parseVersion","parseFloat","operaVersion","opera","parseInt","safariVersion","firefoxVersion","selectionChangeRegisteredName","selectionChangeHandlerName","selectionChangeHandler","registerForSelectionChangeEvent","timeoutHandle","elementValueBeforeEvent","previousElementValue","elementValue","deferUpdateModel","ieUpdateModel","onEvent","preprocess","addBinding","currentIndex","eventsToCatch","requestedEventsToCatch","propertyChangedFired","valueUpdateHandler","ieAutoCompleteHackNeeded","autocomplete","updateFromModel","valueHasChanged","applyValueAction","isCurrentlyVisible","templateSource","templateSources","domElement","anonymousTemplate","rewriterCallback","rewritten","templateRewriting","validateDataBindValuesForRewriting","allValidators","possibleErrorMessage","constructMemoizedTagReplacement","dataBindAttributeValue","tagToRetain","nodeName","dataBindKeyValueArray","rewrittenDataBindAttributeValue","applyBindingsToNextSiblingScript","memoizeDataBindingAttributeSyntaxRegex","memoizeVirtualContainerBindingSyntaxRegex","ensureTemplateIsRewritten","htmlString","memoizeBindingAttributeSyntax","applyMemoizedBindingsToNextSibling","nodeToBind","getTemplateDomData","templatesDomDataKey","setTemplateDomData","templateScript","templateTextArea","templateTemplate","templateElement","templateType","elemContentsProperty","dataDomDataPrefix","templateData","containerData","textData","invokeForEachNodeInContinuousRange","firstNode","lastNode","firstOutOfRangeNode","activateBindingsOnContinuousNodeArray","nextNodeInRange","nodePreviousSibling","previousSibling","newNodes","getFirstNodeFromPossibleArray","nodeOrNodeArray","executeTemplate","targetNodeOrNodeArray","renderMode","firstTargetNode","templateEngineToUse","_templateEngine","renderedNodesArray","haveAddedNodesToParent","resolveTemplateName","disposeOldComputedAndStoreNewOne","newComputed","oldComputed","templateComputedDomDataKey","setTemplateEngine","renderTemplate","dataOrBindingContext","whenToDispose","activelyDisposeWhenNodeIsRemoved","templateName","renderTemplateForEach","arrayOrObservableArray","targetNode","parentBindingContext","arrayItemContext","executeTemplateForArrayItem","arrayValue","activateBindingsCallback","addedNodesArray","bindingValue","templateComputed","dataArray","innerBindingContext","parsedBindingValue","left","right","limitFailedCompares","failedCompares","l","r","leftItem","rightItem","oldArray","newArray","dontLimitMoves","compareSmallArrayToBigArray","statusNotInOld","statusNotInNew","smlArray","bigArray","statusNotInSml","statusNotInBig","smlIndex","bigIndex","thisRow","lastRow","bigIndexMaxForRow","bigIndexMinForRow","myMin","myMax","editDistanceMatrix","smlIndexMax","bigIndexMax","compareRange","maxDistance","northDistance","westDistance","meMinusOne","editScript","notInSml","notInBig","reverse","mapNodeAndRefreshWhenChanged","callbackAfterAddingNodes","mappedNodes","newMappedNodes","lastMappingResultDomDataKey","deletedItemDummyValue","itemMovedOrRetained","editScriptIndex","oldPosition","mapData","lastMappingResult","newMappingResultIndex","itemsForMoveCallbacks","indexObservable","newMappingResult","itemsToProcess","callCallback","items","editScriptItem","movedIndex","isFirstExecution","lastArray","x","lastMappingResultIndex","nodesToDelete","itemsForBeforeRemoveCallbacks","itemsForAfterAddCallbacks","nextNode","initialized","useNodesIfAvailable","templateNodesFunc","templateText","jqueryTmplTemplateEngine","ensureHasReferencedJQueryTemplates","jQueryTmplVersion","compiledTemplate","jQueryTemplateOptions","precompiled","koBindingContext","resultNodes","templateMarkup","open","close","jqueryTmplTemplateEngineInstance","useDefault","isSamePort","protocol1","port1","protocol2","port2","fs","Cc","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","location","href","defaultProtocol","protocol","defaultHostName","hostname","defaultPort","port","buildMap","masterConfig","strip","jsEscape","createXhr","xhr","progId","XMLHttpRequest","ActiveXObject","parseName","modName","ext","temp","lastIndexOf","isRelative","moduleName","xdRegExp","useXhr","uProtocol","uHostName","uPort","exec","finishLoad","onLoad","isBuild","load","req","inlineText","parsed","nonStripName","toUrl","err","pluginName","asModule","writeFile","extPart","fileName","textWrite","contents","env","process","versions","require","nodeRequire","errback","file","readFileSync","headers","header","setRequestHeader","onXhr","evt","readyState","responseText","onXhrComplete","send","Packages","java","stringBuffer","line","encoding","io","File","lineSeparator","lang","System","getProperty","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","charAt","append","Components","classes","interfaces","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString","path","global","amd","Context","subscribers","Pubsub","globalContext","create","createObject","F","Object","checkContext","arrayProto","publish","TypeError","subscribeOnce","that","unsubscribe","iz","targetSubscribers","guid","dump","pubsub","PubSub","convertURIBase","uri","fromBase","toBase","absUrlRegEx","protocolRegEx","removeDoubleSlashes","toBaseProtocol","fromBaseProtocol","relativeURI","absoluteURI","base","baseParts","uriParts","curPart","out","slashes","normalizeCSS","urlRegEx","newUrl","quoteLen","lastIndex","lessAPI","pluginBuilder","normalize","head","pagePath","curStyle","styleCnt","inject","css","styleSheet","cssText","lessId","less","lessc","fileUrl","parser","Parser","tree","toCSS","PageEvents","currentPage","totalPages","setTotalPages","numberOfPages","getTotalPages","getPage","setPage","pageNumber","Event","Signal","PageManager","NavigationBar","totalAnswered","totalQuestions","__updatePage","page","goToPrev","newPage","goToNext","SideBar","PresentationView","ApplicationMain","baseUrl","urlArgs","paths","services","jquery","shim","map","*","d","s"],"mappings":"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A,SAAAc,EAAAkvB,EAAAyjB,GACA3yC,EAAAyrB,WAAAyH,SAAA,oBACAvwB,UAAA,WACA,GAAA4wC,GAAA,YAIA,OAAAA,MAGArkB,SAAAA,MAIAgc,QAAAta,QCvBA4iB,QAAA,IACAC,QAAA,SAAA,GAAAvgC,OAAAC,UAEAugC,OACAjoB,WAAA,iBACAkoB,SAAA,eAEAC,OAAA,4BACA5zC,GAAA,sCACAsvC,OAAA,yBAEAhqB,KAAA,oBAEAuuB,MACAvE,QACAnwC,QAAA,WAGA20C,KACAC,KACArC,KAAA,+BAKAxG,SAAA,KAAA,qCAAA,SAAAlrC,GACAA,EAAAiwB,kBAGA/wB,OAAA,WAAA,cC7BA,SAAAunB,GAAA,GAAAutB,GAAAn1C,SAAAW,EAAA,cAAAuF,EAAA,aAAAkvC,EAAAD,EAAA5rC,cAAA,QAAA6rC,GAAA7tC,KAAA,WAAA4tC,EAAA1rC,qBAAA,QAAA,GAAA9I,GAAAy0C,GAAAA,EAAAlvC,GAAAkvC,EAAAlvC,GAAAysC,QAAA/qB,EAAAwtB,EAAAz0C,GAAAw0C,EAAAzkC,eAAAkX,KACA;AphvxZA,ADyZA;ACxlMA,ADmMA;AClpEA,ADqEA;ACpEA;ACDA,ADEA;ACDA;AACA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChCA;AACA;ACDA,ADEA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxCA;AACA;AACA;AACA,ACHA;AACA;ACDA,ADEA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACnBA;AACA;AACA;AACA,ACHA;AACA;ACDA,ADEA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA,ADkBA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA,ADgCA;AC/BA;AACA;AACA","file":"app.build.js","sourcesContent":["/*!\n * Knockout JavaScript library v3.4.0\n * (c) Steven Sanderson - http://knockoutjs.com/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n(function(){\nvar DEBUG=true;\n(function(undefined){\n    // (0, eval)('this') is a robust way of getting a reference to the global object\n    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\n    var window = this || (0, eval)('this'),\n        document = window['document'],\n        navigator = window['navigator'],\n        jQueryInstance = window[\"jQuery\"],\n        JSON = window[\"JSON\"];\n(function(factory) {\n    // Support three module loading scenarios\n    if (typeof define === 'function' && define['amd']) {\n        // [1] AMD anonymous module\n        define('ko',['exports', 'require'], factory);\n    } else if (typeof exports === 'object' && typeof module === 'object') {\n        // [2] CommonJS/Node.js\n        factory(module['exports'] || exports);  // module.exports is for Node.js\n    } else {\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\n        factory(window['ko'] = {});\n    }\n}(function(koExports, amdRequire){\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\nvar ko = typeof koExports !== 'undefined' ? koExports : {};\n// Google Closure Compiler helpers (used only to make the minified file smaller)\nko.exportSymbol = function(koPath, object) {\n    var tokens = koPath.split(\".\");\n\n    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\n    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\n    var target = ko;\n\n    for (var i = 0; i < tokens.length - 1; i++)\n        target = target[tokens[i]];\n    target[tokens[tokens.length - 1]] = object;\n};\nko.exportProperty = function(owner, publicName, object) {\n    owner[publicName] = object;\n};\nko.version = \"3.4.0\";\n\nko.exportSymbol('version', ko.version);\n// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\nko.options = {\n    'deferUpdates': false,\n    'useOnlyNativeEvents': false\n};\n\n//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\nko.utils = (function () {\n    function objectForEach(obj, action) {\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                action(prop, obj[prop]);\n            }\n        }\n    }\n\n    function extend(target, source) {\n        if (source) {\n            for(var prop in source) {\n                if(source.hasOwnProperty(prop)) {\n                    target[prop] = source[prop];\n                }\n            }\n        }\n        return target;\n    }\n\n    function setPrototypeOf(obj, proto) {\n        obj.__proto__ = proto;\n        return obj;\n    }\n\n    var canSetPrototype = ({ __proto__: [] } instanceof Array);\n    var canUseSymbols = !DEBUG && typeof Symbol === 'function';\n\n    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\n    var knownEvents = {}, knownEventTypesByEventName = {};\n    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\n    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\n    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n    objectForEach(knownEvents, function(eventType, knownEventsForType) {\n        if (knownEventsForType.length) {\n            for (var i = 0, j = knownEventsForType.length; i < j; i++)\n                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\n        }\n    });\n    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\n\n    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n    // If there is a future need to detect specific versions of IE10+, we will amend this.\n    var ieVersion = document && (function() {\n        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\n\n        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n        while (\n            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\n            iElems[0]\n        ) {}\n        return version > 4 ? version : undefined;\n    }());\n    var isIe6 = ieVersion === 6,\n        isIe7 = ieVersion === 7;\n\n    function isClickOnCheckableElement(element, eventType) {\n        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\n        if (eventType.toLowerCase() != \"click\") return false;\n        var inputType = element.type;\n        return (inputType == \"checkbox\") || (inputType == \"radio\");\n    }\n\n    // For details on the pattern for changing node classes\n    // see: https://github.com/knockout/knockout/issues/1597\n    var cssClassNameRegex = /\\S+/g;\n\n    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n        var addOrRemoveFn;\n        if (classNames) {\n            if (typeof node.classList === 'object') {\n                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n                    addOrRemoveFn.call(node.classList, className);\n                });\n            } else if (typeof node.className['baseVal'] === 'string') {\n                // SVG tag .classNames is an SVGAnimatedString instance\n                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n            } else {\n                // node.className ought to be a string.\n                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n            }\n        }\n    }\n\n    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n        });\n        obj[prop] = currentClassNames.join(\" \");\n    }\n\n    return {\n        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\n\n        arrayForEach: function (array, action) {\n            for (var i = 0, j = array.length; i < j; i++)\n                action(array[i], i);\n        },\n\n        arrayIndexOf: function (array, item) {\n            if (typeof Array.prototype.indexOf == \"function\")\n                return Array.prototype.indexOf.call(array, item);\n            for (var i = 0, j = array.length; i < j; i++)\n                if (array[i] === item)\n                    return i;\n            return -1;\n        },\n\n        arrayFirst: function (array, predicate, predicateOwner) {\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate.call(predicateOwner, array[i], i))\n                    return array[i];\n            return null;\n        },\n\n        arrayRemoveItem: function (array, itemToRemove) {\n            var index = ko.utils.arrayIndexOf(array, itemToRemove);\n            if (index > 0) {\n                array.splice(index, 1);\n            }\n            else if (index === 0) {\n                array.shift();\n            }\n        },\n\n        arrayGetDistinctValues: function (array) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++) {\n                if (ko.utils.arrayIndexOf(result, array[i]) < 0)\n                    result.push(array[i]);\n            }\n            return result;\n        },\n\n        arrayMap: function (array, mapping) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                result.push(mapping(array[i], i));\n            return result;\n        },\n\n        arrayFilter: function (array, predicate) {\n            array = array || [];\n            var result = [];\n            for (var i = 0, j = array.length; i < j; i++)\n                if (predicate(array[i], i))\n                    result.push(array[i]);\n            return result;\n        },\n\n        arrayPushAll: function (array, valuesToPush) {\n            if (valuesToPush instanceof Array)\n                array.push.apply(array, valuesToPush);\n            else\n                for (var i = 0, j = valuesToPush.length; i < j; i++)\n                    array.push(valuesToPush[i]);\n            return array;\n        },\n\n        addOrRemoveItem: function(array, value, included) {\n            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\n            if (existingEntryIndex < 0) {\n                if (included)\n                    array.push(value);\n            } else {\n                if (!included)\n                    array.splice(existingEntryIndex, 1);\n            }\n        },\n\n        canSetPrototype: canSetPrototype,\n\n        extend: extend,\n\n        setPrototypeOf: setPrototypeOf,\n\n        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\n\n        objectForEach: objectForEach,\n\n        objectMap: function(source, mapping) {\n            if (!source)\n                return source;\n            var target = {};\n            for (var prop in source) {\n                if (source.hasOwnProperty(prop)) {\n                    target[prop] = mapping(source[prop], prop, source);\n                }\n            }\n            return target;\n        },\n\n        emptyDomNode: function (domNode) {\n            while (domNode.firstChild) {\n                ko.removeNode(domNode.firstChild);\n            }\n        },\n\n        moveCleanedNodesToContainerElement: function(nodes) {\n            // Ensure it's a real array, as we're about to reparent the nodes and\n            // we don't want the underlying collection to change while we're doing that.\n            var nodesArray = ko.utils.makeArray(nodes);\n            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\n\n            var container = templateDocument.createElement('div');\n            for (var i = 0, j = nodesArray.length; i < j; i++) {\n                container.appendChild(ko.cleanNode(nodesArray[i]));\n            }\n            return container;\n        },\n\n        cloneNodes: function (nodesArray, shouldCleanNodes) {\n            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\n                var clonedNode = nodesArray[i].cloneNode(true);\n                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\n            }\n            return newNodesArray;\n        },\n\n        setDomNodeChildren: function (domNode, childNodes) {\n            ko.utils.emptyDomNode(domNode);\n            if (childNodes) {\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    domNode.appendChild(childNodes[i]);\n            }\n        },\n\n        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\n            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\n            if (nodesToReplaceArray.length > 0) {\n                var insertionPoint = nodesToReplaceArray[0];\n                var parent = insertionPoint.parentNode;\n                for (var i = 0, j = newNodesArray.length; i < j; i++)\n                    parent.insertBefore(newNodesArray[i], insertionPoint);\n                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\n                    ko.removeNode(nodesToReplaceArray[i]);\n                }\n            }\n        },\n\n        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\n            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\n            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\n            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\n            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\n            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\n            //\n            // Rules:\n            //   [A] Any leading nodes that have been removed should be ignored\n            //       These most likely correspond to memoization nodes that were already removed during binding\n            //       See https://github.com/knockout/knockout/pull/440\n            //   [B] Any trailing nodes that have been remove should be ignored\n            //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\n            //       See https://github.com/knockout/knockout/pull/1903\n            //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\n            //       and include any nodes that have been inserted among the previous collection\n\n            if (continuousNodeArray.length) {\n                // The parent node can be a virtual element; so get the real parent node\n                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\n\n                // Rule [A]\n                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\n                    continuousNodeArray.splice(0, 1);\n\n                // Rule [B]\n                while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\n                    continuousNodeArray.length--;\n\n                // Rule [C]\n                if (continuousNodeArray.length > 1) {\n                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\n                    // Replace with the actual new continuous node set\n                    continuousNodeArray.length = 0;\n                    while (current !== last) {\n                        continuousNodeArray.push(current);\n                        current = current.nextSibling;\n                    }\n                    continuousNodeArray.push(last);\n                }\n            }\n            return continuousNodeArray;\n        },\n\n        setOptionNodeSelectionState: function (optionNode, isSelected) {\n            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\n            if (ieVersion < 7)\n                optionNode.setAttribute(\"selected\", isSelected);\n            else\n                optionNode.selected = isSelected;\n        },\n\n        stringTrim: function (string) {\n            return string === null || string === undefined ? '' :\n                string.trim ?\n                    string.trim() :\n                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n        },\n\n        stringStartsWith: function (string, startsWith) {\n            string = string || \"\";\n            if (startsWith.length > string.length)\n                return false;\n            return string.substring(0, startsWith.length) === startsWith;\n        },\n\n        domNodeIsContainedBy: function (node, containedByNode) {\n            if (node === containedByNode)\n                return true;\n            if (node.nodeType === 11)\n                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\n            if (containedByNode.contains)\n                return containedByNode.contains(node.nodeType === 3 ? node.parentNode : node);\n            if (containedByNode.compareDocumentPosition)\n                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\n            while (node && node != containedByNode) {\n                node = node.parentNode;\n            }\n            return !!node;\n        },\n\n        domNodeIsAttachedToDocument: function (node) {\n            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\n        },\n\n        anyDomNodeIsAttachedToDocument: function(nodes) {\n            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\n        },\n\n        tagNameLower: function(element) {\n            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\n            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\n            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\n            return element && element.tagName && element.tagName.toLowerCase();\n        },\n\n        catchFunctionErrors: function (delegate) {\n            return ko['onError'] ? function () {\n                try {\n                    return delegate.apply(this, arguments);\n                } catch (e) {\n                    ko['onError'] && ko['onError'](e);\n                    throw e;\n                }\n            } : delegate;\n        },\n\n        setTimeout: function (handler, timeout) {\n            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\n        },\n\n        deferError: function (error) {\n            setTimeout(function () {\n                ko['onError'] && ko['onError'](error);\n                throw error;\n            }, 0);\n        },\n\n        registerEventHandler: function (element, eventType, handler) {\n            var wrappedHandler = ko.utils.catchFunctionErrors(handler);\n\n            var mustUseAttachEvent = ieVersion && eventsThatMustBeRegisteredUsingAttachEvent[eventType];\n            if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\n                jQueryInstance(element)['bind'](eventType, wrappedHandler);\n            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\n                element.addEventListener(eventType, wrappedHandler, false);\n            else if (typeof element.attachEvent != \"undefined\") {\n                var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\n                    attachEventName = \"on\" + eventType;\n                element.attachEvent(attachEventName, attachEventHandler);\n\n                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\n                // so to avoid leaks, we have to remove them manually. See bug #856\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n                    element.detachEvent(attachEventName, attachEventHandler);\n                });\n            } else\n                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\n        },\n\n        triggerEvent: function (element, eventType) {\n            if (!(element && element.nodeType))\n                throw new Error(\"element must be a DOM node when calling triggerEvent\");\n\n            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\n            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\n            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\n            // In both cases, we'll use the click method instead.\n            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\n\n            if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\n                jQueryInstance(element)['trigger'](eventType);\n            } else if (typeof document.createEvent == \"function\") {\n                if (typeof element.dispatchEvent == \"function\") {\n                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\n                    var event = document.createEvent(eventCategory);\n                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\n                    element.dispatchEvent(event);\n                }\n                else\n                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\n            } else if (useClickWorkaround && element.click) {\n                element.click();\n            } else if (typeof element.fireEvent != \"undefined\") {\n                element.fireEvent(\"on\" + eventType);\n            } else {\n                throw new Error(\"Browser doesn't support triggering events\");\n            }\n        },\n\n        unwrapObservable: function (value) {\n            return ko.isObservable(value) ? value() : value;\n        },\n\n        peekObservable: function (value) {\n            return ko.isObservable(value) ? value.peek() : value;\n        },\n\n        toggleDomNodeCssClass: toggleDomNodeCssClass,\n\n        setTextContent: function(element, textContent) {\n            var value = ko.utils.unwrapObservable(textContent);\n            if ((value === null) || (value === undefined))\n                value = \"\";\n\n            // We need there to be exactly one child: a text node.\n            // If there are no children, more than one, or if it's not a text node,\n            // we'll clear everything and create a single text node.\n            var innerTextNode = ko.virtualElements.firstChild(element);\n            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\n                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\n            } else {\n                innerTextNode.data = value;\n            }\n\n            ko.utils.forceRefresh(element);\n        },\n\n        setElementName: function(element, name) {\n            element.name = name;\n\n            // Workaround IE 6/7 issue\n            // - https://github.com/SteveSanderson/knockout/issues/197\n            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\n            if (ieVersion <= 7) {\n                try {\n                    element.mergeAttributes(document.createElement(\"<input name='\" + element.name + \"'/>\"), false);\n                }\n                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\n            }\n        },\n\n        forceRefresh: function(node) {\n            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\n            if (ieVersion >= 9) {\n                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\n                var elem = node.nodeType == 1 ? node : node.parentNode;\n                if (elem.style)\n                    elem.style.zoom = elem.style.zoom;\n            }\n        },\n\n        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\n            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\n            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\n            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\n            if (ieVersion) {\n                var originalWidth = selectElement.style.width;\n                selectElement.style.width = 0;\n                selectElement.style.width = originalWidth;\n            }\n        },\n\n        range: function (min, max) {\n            min = ko.utils.unwrapObservable(min);\n            max = ko.utils.unwrapObservable(max);\n            var result = [];\n            for (var i = min; i <= max; i++)\n                result.push(i);\n            return result;\n        },\n\n        makeArray: function(arrayLikeObject) {\n            var result = [];\n            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n                result.push(arrayLikeObject[i]);\n            };\n            return result;\n        },\n\n        createSymbolOrString: function(identifier) {\n            return canUseSymbols ? Symbol(identifier) : identifier;\n        },\n\n        isIe6 : isIe6,\n        isIe7 : isIe7,\n        ieVersion : ieVersion,\n\n        getFormFields: function(form, fieldName) {\n            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\n            var isMatchingField = (typeof fieldName == 'string')\n                ? function(field) { return field.name === fieldName }\n                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\n            var matches = [];\n            for (var i = fields.length - 1; i >= 0; i--) {\n                if (isMatchingField(fields[i]))\n                    matches.push(fields[i]);\n            };\n            return matches;\n        },\n\n        parseJson: function (jsonString) {\n            if (typeof jsonString == \"string\") {\n                jsonString = ko.utils.stringTrim(jsonString);\n                if (jsonString) {\n                    if (JSON && JSON.parse) // Use native parsing where available\n                        return JSON.parse(jsonString);\n                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\n                }\n            }\n            return null;\n        },\n\n        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\n            if (!JSON || !JSON.stringify)\n                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\n        },\n\n        postJson: function (urlOrForm, data, options) {\n            options = options || {};\n            var params = options['params'] || {};\n            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\n            var url = urlOrForm;\n\n            // If we were given a form, use its 'action' URL and pick out any requested field values\n            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\n                var originalForm = urlOrForm;\n                url = originalForm.action;\n                for (var i = includeFields.length - 1; i >= 0; i--) {\n                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\n                    for (var j = fields.length - 1; j >= 0; j--)\n                        params[fields[j].name] = fields[j].value;\n                }\n            }\n\n            data = ko.utils.unwrapObservable(data);\n            var form = document.createElement(\"form\");\n            form.style.display = \"none\";\n            form.action = url;\n            form.method = \"post\";\n            for (var key in data) {\n                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\n                form.appendChild(input);\n            }\n            objectForEach(params, function(key, value) {\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = value;\n                form.appendChild(input);\n            });\n            document.body.appendChild(form);\n            options['submitter'] ? options['submitter'](form) : form.submit();\n            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\n        }\n    }\n}());\n\nko.exportSymbol('utils', ko.utils);\nko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\nko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\nko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\nko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\nko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\nko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\nko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\nko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\nko.exportSymbol('utils.extend', ko.utils.extend);\nko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\nko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\nko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\nko.exportSymbol('utils.postJson', ko.utils.postJson);\nko.exportSymbol('utils.parseJson', ko.utils.parseJson);\nko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\nko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\nko.exportSymbol('utils.range', ko.utils.range);\nko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\nko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\nko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\nko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\nko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\nko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\nko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\n\nif (!Function.prototype['bind']) {\n    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\n    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\n    Function.prototype['bind'] = function (object) {\n        var originalFunction = this;\n        if (arguments.length === 1) {\n            return function () {\n                return originalFunction.apply(object, arguments);\n            };\n        } else {\n            var partialArgs = Array.prototype.slice.call(arguments, 1);\n            return function () {\n                var args = partialArgs.slice(0);\n                args.push.apply(args, arguments);\n                return originalFunction.apply(object, args);\n            };\n        }\n    };\n}\n\nko.utils.domData = new (function () {\n    var uniqueId = 0;\n    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\n    var dataStore = {};\n\n    function getAll(node, createIfNotFound) {\n        var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n        var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\n        if (!hasExistingDataStore) {\n            if (!createIfNotFound)\n                return undefined;\n            dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\n            dataStore[dataStoreKey] = {};\n        }\n        return dataStore[dataStoreKey];\n    }\n\n    return {\n        get: function (node, key) {\n            var allDataForNode = getAll(node, false);\n            return allDataForNode === undefined ? undefined : allDataForNode[key];\n        },\n        set: function (node, key, value) {\n            if (value === undefined) {\n                // Make sure we don't actually create a new domData key if we are actually deleting a value\n                if (getAll(node, false) === undefined)\n                    return;\n            }\n            var allDataForNode = getAll(node, true);\n            allDataForNode[key] = value;\n        },\n        clear: function (node) {\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n            if (dataStoreKey) {\n                delete dataStore[dataStoreKey];\n                node[dataStoreKeyExpandoPropertyName] = null;\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n            }\n            return false;\n        },\n\n        nextKey: function () {\n            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\n        }\n    };\n})();\n\nko.exportSymbol('utils.domData', ko.utils.domData);\nko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\n\nko.utils.domNodeDisposal = new (function () {\n    var domDataKey = ko.utils.domData.nextKey();\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n            allDisposeCallbacks = [];\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n        }\n        return allDisposeCallbacks;\n    }\n    function destroyCallbacksCollection(node) {\n        ko.utils.domData.set(node, domDataKey, undefined);\n    }\n\n    function cleanSingleNode(node) {\n        // Run all the dispose callbacks\n        var callbacks = getDisposeCallbacksCollection(node, false);\n        if (callbacks) {\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n            for (var i = 0; i < callbacks.length; i++)\n                callbacks[i](node);\n        }\n\n        // Erase the DOM data\n        ko.utils.domData.clear(node);\n\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n        if (cleanableNodeTypesWithDescendants[node.nodeType])\n            cleanImmediateCommentTypeChildren(node);\n    }\n\n    function cleanImmediateCommentTypeChildren(nodeWithChildren) {\n        var child, nextChild = nodeWithChildren.firstChild;\n        while (child = nextChild) {\n            nextChild = child.nextSibling;\n            if (child.nodeType === 8)\n                cleanSingleNode(child);\n        }\n    }\n\n    return {\n        addDisposeCallback : function(node, callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"Callback must be a function\");\n            getDisposeCallbacksCollection(node, true).push(callback);\n        },\n\n        removeDisposeCallback : function(node, callback) {\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n            if (callbacksCollection) {\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n                if (callbacksCollection.length == 0)\n                    destroyCallbacksCollection(node);\n            }\n        },\n\n        cleanNode : function(node) {\n            // First clean this node, where applicable\n            if (cleanableNodeTypes[node.nodeType]) {\n                cleanSingleNode(node);\n\n                // ... then its descendants, where applicable\n                if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n                    // Clone the descendants list in case it changes during iteration\n                    var descendants = [];\n                    ko.utils.arrayPushAll(descendants, node.getElementsByTagName(\"*\"));\n                    for (var i = 0, j = descendants.length; i < j; i++)\n                        cleanSingleNode(descendants[i]);\n                }\n            }\n            return node;\n        },\n\n        removeNode : function(node) {\n            ko.cleanNode(node);\n            if (node.parentNode)\n                node.parentNode.removeChild(node);\n        },\n\n        \"cleanExternalData\" : function (node) {\n            // Special support for jQuery here because it's so commonly used.\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n            // so notify it to tear down any resources associated with the node & descendants here.\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n                jQueryInstance['cleanData']([node]);\n        }\n    };\n})();\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\nko.exportSymbol('cleanNode', ko.cleanNode);\nko.exportSymbol('removeNode', ko.removeNode);\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n(function () {\n    var none = [0, \"\", \"\"],\n        table = [1, \"<table>\", \"</table>\"],\n        tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\n        tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        select = [1, \"<select multiple='multiple'>\", \"</select>\"],\n        lookup = {\n            'thead': table,\n            'tbody': table,\n            'tfoot': table,\n            'tr': tbody,\n            'td': tr,\n            'th': tr,\n            'option': select,\n            'optgroup': select\n        },\n\n        // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\n        mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\n\n    function getWrap(tags) {\n        var m = tags.match(/^<([a-z]+)[ >]/);\n        return (m && lookup[m[1]]) || none;\n    }\n\n    function simpleHtmlParse(html, documentContext) {\n        documentContext || (documentContext = document);\n        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\n        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\n        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\n        // Trim whitespace, otherwise indexOf won't work as expected\n        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\n            wrap = getWrap(tags),\n            depth = wrap[0];\n\n        // Go to html and back, then peel off extra wrappers\n        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\n        if (typeof windowContext['innerShiv'] == \"function\") {\n            // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\n            // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\n            // somehow shims the native APIs so it just works anyway)\n            div.appendChild(windowContext['innerShiv'](markup));\n        } else {\n            if (mayRequireCreateElementHack) {\n                // The document.createElement('my-element') trick to enable custom elements in IE6-8\n                // only works if we assign innerHTML on an element associated with that document.\n                documentContext.appendChild(div);\n            }\n\n            div.innerHTML = markup;\n\n            if (mayRequireCreateElementHack) {\n                div.parentNode.removeChild(div);\n            }\n        }\n\n        // Move to the right depth\n        while (depth--)\n            div = div.lastChild;\n\n        return ko.utils.makeArray(div.lastChild.childNodes);\n    }\n\n    function jQueryHtmlParse(html, documentContext) {\n        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\n        if (jQueryInstance['parseHTML']) {\n            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\n        } else {\n            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\n            var elems = jQueryInstance['clean']([html], documentContext);\n\n            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\n            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\n            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\n            if (elems && elems[0]) {\n                // Find the top-most parent element that's a direct child of a document fragment\n                var elem = elems[0];\n                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\n                    elem = elem.parentNode;\n                // ... then detach it\n                if (elem.parentNode)\n                    elem.parentNode.removeChild(elem);\n            }\n\n            return elems;\n        }\n    }\n\n    ko.utils.parseHtmlFragment = function(html, documentContext) {\n        return jQueryInstance ?\n            jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\n            simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\n    };\n\n    ko.utils.setHtml = function(node, html) {\n        ko.utils.emptyDomNode(node);\n\n        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n        html = ko.utils.unwrapObservable(html);\n\n        if ((html !== null) && (html !== undefined)) {\n            if (typeof html != 'string')\n                html = html.toString();\n\n            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\n            // for example <tr> elements which are not normally allowed to exist on their own.\n            // If you've referenced jQuery we'll use that rather than duplicating its code.\n            if (jQueryInstance) {\n                jQueryInstance(node)['html'](html);\n            } else {\n                // ... otherwise, use KO's own parsing logic.\n                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\n                for (var i = 0; i < parsedNodes.length; i++)\n                    node.appendChild(parsedNodes[i]);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\nko.exportSymbol('utils.setHtml', ko.utils.setHtml);\n\nko.memoization = (function () {\n    var memos = {};\n\n    function randomMax8HexChars() {\n        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n    }\n    function generateRandomId() {\n        return randomMax8HexChars() + randomMax8HexChars();\n    }\n    function findMemoNodes(rootNode, appendToArray) {\n        if (!rootNode)\n            return;\n        if (rootNode.nodeType == 8) {\n            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\n            if (memoId != null)\n                appendToArray.push({ domNode: rootNode, memoId: memoId });\n        } else if (rootNode.nodeType == 1) {\n            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\n                findMemoNodes(childNodes[i], appendToArray);\n        }\n    }\n\n    return {\n        memoize: function (callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n            var memoId = generateRandomId();\n            memos[memoId] = callback;\n            return \"<!--[ko_memo:\" + memoId + \"]-->\";\n        },\n\n        unmemoize: function (memoId, callbackParams) {\n            var callback = memos[memoId];\n            if (callback === undefined)\n                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n            try {\n                callback.apply(null, callbackParams || []);\n                return true;\n            }\n            finally { delete memos[memoId]; }\n        },\n\n        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\n            var memos = [];\n            findMemoNodes(domNode, memos);\n            for (var i = 0, j = memos.length; i < j; i++) {\n                var node = memos[i].domNode;\n                var combinedParams = [node];\n                if (extraCallbackParamsArray)\n                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\n                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\n                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\n                if (node.parentNode)\n                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n            }\n        },\n\n        parseMemoText: function (memoText) {\n            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\n            return match ? match[1] : null;\n        }\n    };\n})();\n\nko.exportSymbol('memoization', ko.memoization);\nko.exportSymbol('memoization.memoize', ko.memoization.memoize);\nko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\nko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\nko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\nko.tasks = (function () {\n    var scheduler,\n        taskQueue = [],\n        taskQueueLength = 0,\n        nextHandle = 1,\n        nextIndexToProcess = 0;\n\n    if (window['MutationObserver']) {\n        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n        scheduler = (function (callback) {\n            var div = document.createElement(\"div\");\n            new MutationObserver(callback).observe(div, {attributes: true});\n            return function () { div.classList.toggle(\"foo\"); };\n        })(scheduledProcess);\n    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\n        // IE 6-10\n        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n        scheduler = function (callback) {\n            var script = document.createElement(\"script\");\n            script.onreadystatechange = function () {\n                script.onreadystatechange = null;\n                document.documentElement.removeChild(script);\n                script = null;\n                callback();\n            };\n            document.documentElement.appendChild(script);\n        };\n    } else {\n        scheduler = function (callback) {\n            setTimeout(callback, 0);\n        };\n    }\n\n    function processTasks() {\n        if (taskQueueLength) {\n            // Each mark represents the end of a logical group of tasks and the number of these groups is\n            // limited to prevent unchecked recursion.\n            var mark = taskQueueLength, countMarks = 0;\n\n            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n            for (var task; nextIndexToProcess < taskQueueLength; ) {\n                if (task = taskQueue[nextIndexToProcess++]) {\n                    if (nextIndexToProcess > mark) {\n                        if (++countMarks >= 5000) {\n                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                            break;\n                        }\n                        mark = taskQueueLength;\n                    }\n                    try {\n                        task();\n                    } catch (ex) {\n                        ko.utils.deferError(ex);\n                    }\n                }\n            }\n        }\n    }\n\n    function scheduledProcess() {\n        processTasks();\n\n        // Reset the queue\n        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n    }\n\n    function scheduleTaskProcessing() {\n        ko.tasks['scheduler'](scheduledProcess);\n    }\n\n    var tasks = {\n        'scheduler': scheduler,     // Allow overriding the scheduler\n\n        schedule: function (func) {\n            if (!taskQueueLength) {\n                scheduleTaskProcessing();\n            }\n\n            taskQueue[taskQueueLength++] = func;\n            return nextHandle++;\n        },\n\n        cancel: function (handle) {\n            var index = handle - (nextHandle - taskQueueLength);\n            if (index >= nextIndexToProcess && index < taskQueueLength) {\n                taskQueue[index] = null;\n            }\n        },\n\n        // For testing only: reset the queue and return the previous queue length\n        'resetForTesting': function () {\n            var length = taskQueueLength - nextIndexToProcess;\n            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n            return length;\n        },\n\n        runEarly: processTasks\n    };\n\n    return tasks;\n})();\n\nko.exportSymbol('tasks', ko.tasks);\nko.exportSymbol('tasks.schedule', ko.tasks.schedule);\n//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\nko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\nko.extenders = {\n    'throttle': function(target, timeout) {\n        // Throttling means two things:\n\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n        target['throttleEvaluation'] = timeout;\n\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n        //     so the target cannot change value synchronously or faster than a certain rate\n        var writeTimeoutInstance = null;\n        return ko.dependentObservable({\n            'read': target,\n            'write': function(value) {\n                clearTimeout(writeTimeoutInstance);\n                writeTimeoutInstance = ko.utils.setTimeout(function() {\n                    target(value);\n                }, timeout);\n            }\n        });\n    },\n\n    'rateLimit': function(target, options) {\n        var timeout, method, limitFunction;\n\n        if (typeof options == 'number') {\n            timeout = options;\n        } else {\n            timeout = options['timeout'];\n            method = options['method'];\n        }\n\n        // rateLimit supersedes deferred updates\n        target._deferUpdates = false;\n\n        limitFunction = method == 'notifyWhenChangesStop' ?  debounce : throttle;\n        target.limit(function(callback) {\n            return limitFunction(callback, timeout);\n        });\n    },\n\n    'deferred': function(target, options) {\n        if (options !== true) {\n            throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\n        }\n\n        if (!target._deferUpdates) {\n            target._deferUpdates = true;\n            target.limit(function (callback) {\n                var handle;\n                return function () {\n                    ko.tasks.cancel(handle);\n                    handle = ko.tasks.schedule(callback);\n                    target['notifySubscribers'](undefined, 'dirty');\n                };\n            });\n        }\n    },\n\n    'notify': function(target, notifyWhen) {\n        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\n            null :  // null equalityComparer means to always notify\n            valuesArePrimitiveAndEqual;\n    }\n};\n\nvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\nfunction valuesArePrimitiveAndEqual(a, b) {\n    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\n    return oldValueIsPrimitive ? (a === b) : false;\n}\n\nfunction throttle(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        if (!timeoutInstance) {\n            timeoutInstance = ko.utils.setTimeout(function () {\n                timeoutInstance = undefined;\n                callback();\n            }, timeout);\n        }\n    };\n}\n\nfunction debounce(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        clearTimeout(timeoutInstance);\n        timeoutInstance = ko.utils.setTimeout(callback, timeout);\n    };\n}\n\nfunction applyExtenders(requestedExtenders) {\n    var target = this;\n    if (requestedExtenders) {\n        ko.utils.objectForEach(requestedExtenders, function(key, value) {\n            var extenderHandler = ko.extenders[key];\n            if (typeof extenderHandler == 'function') {\n                target = extenderHandler(target, value) || target;\n            }\n        });\n    }\n    return target;\n}\n\nko.exportSymbol('extenders', ko.extenders);\n\nko.subscription = function (target, callback, disposeCallback) {\n    this._target = target;\n    this.callback = callback;\n    this.disposeCallback = disposeCallback;\n    this.isDisposed = false;\n    ko.exportProperty(this, 'dispose', this.dispose);\n};\nko.subscription.prototype.dispose = function () {\n    this.isDisposed = true;\n    this.disposeCallback();\n};\n\nko.subscribable = function () {\n    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\n    ko_subscribable_fn.init(this);\n}\n\nvar defaultEvent = \"change\";\n\n// Moved out of \"limit\" to avoid the extra closure\nfunction limitNotifySubscribers(value, event) {\n    if (!event || event === defaultEvent) {\n        this._limitChange(value);\n    } else if (event === 'beforeChange') {\n        this._limitBeforeChange(value);\n    } else {\n        this._origNotifySubscribers(value, event);\n    }\n}\n\nvar ko_subscribable_fn = {\n    init: function(instance) {\n        instance._subscriptions = {};\n        instance._versionNumber = 1;\n    },\n\n    subscribe: function (callback, callbackTarget, event) {\n        var self = this;\n\n        event = event || defaultEvent;\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n        var subscription = new ko.subscription(self, boundCallback, function () {\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n            if (self.afterSubscriptionRemove)\n                self.afterSubscriptionRemove(event);\n        });\n\n        if (self.beforeSubscriptionAdd)\n            self.beforeSubscriptionAdd(event);\n\n        if (!self._subscriptions[event])\n            self._subscriptions[event] = [];\n        self._subscriptions[event].push(subscription);\n\n        return subscription;\n    },\n\n    \"notifySubscribers\": function (valueToNotify, event) {\n        event = event || defaultEvent;\n        if (event === defaultEvent) {\n            this.updateVersion();\n        }\n        if (this.hasSubscriptionsForEvent(event)) {\n            try {\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n                for (var a = this._subscriptions[event].slice(0), i = 0, subscription; subscription = a[i]; ++i) {\n                    // In case a subscription was disposed during the arrayForEach cycle, check\n                    // for isDisposed on each subscription before invoking its callback\n                    if (!subscription.isDisposed)\n                        subscription.callback(valueToNotify);\n                }\n            } finally {\n                ko.dependencyDetection.end(); // End suppressing dependency detection\n            }\n        }\n    },\n\n    getVersion: function () {\n        return this._versionNumber;\n    },\n\n    hasChanged: function (versionToCheck) {\n        return this.getVersion() !== versionToCheck;\n    },\n\n    updateVersion: function () {\n        ++this._versionNumber;\n    },\n\n    limit: function(limitFunction) {\n        var self = this, selfIsObservable = ko.isObservable(self),\n            ignoreBeforeChange, previousValue, pendingValue, beforeChange = 'beforeChange';\n\n        if (!self._origNotifySubscribers) {\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\n            self[\"notifySubscribers\"] = limitNotifySubscribers;\n        }\n\n        var finish = limitFunction(function() {\n            self._notificationIsPending = false;\n\n            // If an observable provided a reference to itself, access it to get the latest value.\n            // This allows computed observables to delay calculating their value until needed.\n            if (selfIsObservable && pendingValue === self) {\n                pendingValue = self();\n            }\n            ignoreBeforeChange = false;\n            if (self.isDifferent(previousValue, pendingValue)) {\n                self._origNotifySubscribers(previousValue = pendingValue);\n            }\n        });\n\n        self._limitChange = function(value) {\n            self._notificationIsPending = ignoreBeforeChange = true;\n            pendingValue = value;\n            finish();\n        };\n        self._limitBeforeChange = function(value) {\n            if (!ignoreBeforeChange) {\n                previousValue = value;\n                self._origNotifySubscribers(value, beforeChange);\n            }\n        };\n    },\n\n    hasSubscriptionsForEvent: function(event) {\n        return this._subscriptions[event] && this._subscriptions[event].length;\n    },\n\n    getSubscriptionsCount: function (event) {\n        if (event) {\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n        } else {\n            var total = 0;\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n                if (eventName !== 'dirty')\n                    total += subscriptions.length;\n            });\n            return total;\n        }\n    },\n\n    isDifferent: function(oldValue, newValue) {\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n    },\n\n    extend: applyExtenders\n};\n\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n}\n\nko.subscribable['fn'] = ko_subscribable_fn;\n\n\nko.isSubscribable = function (instance) {\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n};\n\nko.exportSymbol('subscribable', ko.subscribable);\nko.exportSymbol('isSubscribable', ko.isSubscribable);\n\nko.computedContext = ko.dependencyDetection = (function () {\n    var outerFrames = [],\n        currentFrame,\n        lastId = 0;\n\n    // Return a unique ID that can be assigned to an observable for dependency tracking.\n    // Theoretically, you could eventually overflow the number storage size, resulting\n    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n    // take over 285 years to reach that number.\n    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\n    function getId() {\n        return ++lastId;\n    }\n\n    function begin(options) {\n        outerFrames.push(currentFrame);\n        currentFrame = options;\n    }\n\n    function end() {\n        currentFrame = outerFrames.pop();\n    }\n\n    return {\n        begin: begin,\n\n        end: end,\n\n        registerDependency: function (subscribable) {\n            if (currentFrame) {\n                if (!ko.isSubscribable(subscribable))\n                    throw new Error(\"Only subscribable things can act as dependencies\");\n                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\n            }\n        },\n\n        ignore: function (callback, callbackTarget, callbackArgs) {\n            try {\n                begin();\n                return callback.apply(callbackTarget, callbackArgs || []);\n            } finally {\n                end();\n            }\n        },\n\n        getDependenciesCount: function () {\n            if (currentFrame)\n                return currentFrame.computed.getDependenciesCount();\n        },\n\n        isInitial: function() {\n            if (currentFrame)\n                return currentFrame.isInitial;\n        }\n    };\n})();\n\nko.exportSymbol('computedContext', ko.computedContext);\nko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\nko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\n\nko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\nvar observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\n\nko.observable = function (initialValue) {\n    function observable() {\n        if (arguments.length > 0) {\n            // Write\n\n            // Ignore writes if the value hasn't changed\n            if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\n                observable.valueWillMutate();\n                observable[observableLatestValue] = arguments[0];\n                observable.valueHasMutated();\n            }\n            return this; // Permits chained assignments\n        }\n        else {\n            // Read\n            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n            return observable[observableLatestValue];\n        }\n    }\n\n    observable[observableLatestValue] = initialValue;\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(observable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(observable);\n\n    // Inherit from 'observable'\n    ko.utils.setPrototypeOfOrExtend(observable, observableFn);\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](observable, true);\n    }\n\n    return observable;\n}\n\n// Define prototype for observables\nvar observableFn = {\n    'equalityComparer': valuesArePrimitiveAndEqual,\n    peek: function() { return this[observableLatestValue]; },\n    valueHasMutated: function () { this['notifySubscribers'](this[observableLatestValue]); },\n    valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observable constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\n}\n\nvar protoProperty = ko.observable.protoProperty = '__ko_proto__';\nobservableFn[protoProperty] = ko.observable;\n\nko.hasPrototype = function(instance, prototype) {\n    if ((instance === null) || (instance === undefined) || (instance[protoProperty] === undefined)) return false;\n    if (instance[protoProperty] === prototype) return true;\n    return ko.hasPrototype(instance[protoProperty], prototype); // Walk the prototype chain\n};\n\nko.isObservable = function (instance) {\n    return ko.hasPrototype(instance, ko.observable);\n}\nko.isWriteableObservable = function (instance) {\n    // Observable\n    if ((typeof instance == 'function') && instance[protoProperty] === ko.observable)\n        return true;\n    // Writeable dependent observable\n    if ((typeof instance == 'function') && (instance[protoProperty] === ko.dependentObservable) && (instance.hasWriteFunction))\n        return true;\n    // Anything else\n    return false;\n}\n\nko.exportSymbol('observable', ko.observable);\nko.exportSymbol('isObservable', ko.isObservable);\nko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\nko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\nko.exportSymbol('observable.fn', observableFn);\nko.exportProperty(observableFn, 'peek', observableFn.peek);\nko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\nko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\nko.observableArray = function (initialValues) {\n    initialValues = initialValues || [];\n\n    if (typeof initialValues != 'object' || !('length' in initialValues))\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\n    var result = ko.observable(initialValues);\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n    return result.extend({'trackArrayChanges':true});\n};\n\nko.observableArray['fn'] = {\n    'remove': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var removedValues = [];\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        for (var i = 0; i < underlyingArray.length; i++) {\n            var value = underlyingArray[i];\n            if (predicate(value)) {\n                if (removedValues.length === 0) {\n                    this.valueWillMutate();\n                }\n                removedValues.push(value);\n                underlyingArray.splice(i, 1);\n                i--;\n            }\n        }\n        if (removedValues.length) {\n            this.valueHasMutated();\n        }\n        return removedValues;\n    },\n\n    'removeAll': function (arrayOfValues) {\n        // If you passed zero args, we remove everything\n        if (arrayOfValues === undefined) {\n            var underlyingArray = this.peek();\n            var allValues = underlyingArray.slice(0);\n            this.valueWillMutate();\n            underlyingArray.splice(0, underlyingArray.length);\n            this.valueHasMutated();\n            return allValues;\n        }\n        // If you passed an arg, we interpret it as an array of entries to remove\n        if (!arrayOfValues)\n            return [];\n        return this['remove'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'destroy': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        this.valueWillMutate();\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n            var value = underlyingArray[i];\n            if (predicate(value))\n                underlyingArray[i][\"_destroy\"] = true;\n        }\n        this.valueHasMutated();\n    },\n\n    'destroyAll': function (arrayOfValues) {\n        // If you passed zero args, we destroy everything\n        if (arrayOfValues === undefined)\n            return this['destroy'](function() { return true });\n\n        // If you passed an arg, we interpret it as an array of entries to destroy\n        if (!arrayOfValues)\n            return [];\n        return this['destroy'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'indexOf': function (item) {\n        var underlyingArray = this();\n        return ko.utils.arrayIndexOf(underlyingArray, item);\n    },\n\n    'replace': function(oldItem, newItem) {\n        var index = this['indexOf'](oldItem);\n        if (index >= 0) {\n            this.valueWillMutate();\n            this.peek()[index] = newItem;\n            this.valueHasMutated();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n}\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n        // (for consistency with mutating regular observables)\n        var underlyingArray = this.peek();\n        this.valueWillMutate();\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n        this.valueHasMutated();\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n        return methodCallResult === underlyingArray ? this : methodCallResult;\n    };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\nko.utils.arrayForEach([\"slice\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        var underlyingArray = this();\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\n    };\n});\n\nko.exportSymbol('observableArray', ko.observableArray);\nvar arrayChangeEventName = 'arrayChange';\nko.extenders['trackArrayChanges'] = function(target, options) {\n    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n    target.compareArrayOptions = {};\n    if (options && typeof options == \"object\") {\n        ko.utils.extend(target.compareArrayOptions, options);\n    }\n    target.compareArrayOptions['sparse'] = true;\n\n    // Only modify the target observable once\n    if (target.cacheDiffForKnownOperation) {\n        return;\n    }\n    var trackingChanges = false,\n        cachedDiff = null,\n        arrayChangeSubscription,\n        pendingNotifications = 0,\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n    target.beforeSubscriptionAdd = function (event) {\n        if (underlyingBeforeSubscriptionAddFunction)\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\n        if (event === arrayChangeEventName) {\n            trackChanges();\n        }\n    };\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n    target.afterSubscriptionRemove = function (event) {\n        if (underlyingAfterSubscriptionRemoveFunction)\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n            arrayChangeSubscription.dispose();\n            trackingChanges = false;\n        }\n    };\n\n    function trackChanges() {\n        // Calling 'trackChanges' multiple times is the same as calling it once\n        if (trackingChanges) {\n            return;\n        }\n\n        trackingChanges = true;\n\n        // Intercept \"notifySubscribers\" to track how many times it was called.\n        var underlyingNotifySubscribersFunction = target['notifySubscribers'];\n        target['notifySubscribers'] = function(valueToNotify, event) {\n            if (!event || event === defaultEvent) {\n                ++pendingNotifications;\n            }\n            return underlyingNotifySubscribersFunction.apply(this, arguments);\n        };\n\n        // Each time the array changes value, capture a clone so that on the next\n        // change it's possible to produce a diff\n        var previousContents = [].concat(target.peek() || []);\n        cachedDiff = null;\n        arrayChangeSubscription = target.subscribe(function(currentContents) {\n            // Make a copy of the current contents and ensure it's an array\n            currentContents = [].concat(currentContents || []);\n\n            // Compute the diff and issue notifications, but only if someone is listening\n            if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n                var changes = getChanges(previousContents, currentContents);\n            }\n\n            // Eliminate references to the old, removed items, so they can be GCed\n            previousContents = currentContents;\n            cachedDiff = null;\n            pendingNotifications = 0;\n\n            if (changes && changes.length) {\n                target['notifySubscribers'](changes, arrayChangeEventName);\n            }\n        });\n    }\n\n    function getChanges(previousContents, currentContents) {\n        // We try to re-use cached diffs.\n        // The scenarios where pendingNotifications > 1 are when using rate-limiting or the Deferred Updates\n        // plugin, which without this check would not be compatible with arrayChange notifications. Normally,\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\n        if (!cachedDiff || pendingNotifications > 1) {\n            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n        }\n\n        return cachedDiff;\n    }\n\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n        // Only run if we're currently tracking changes for this observable array\n        // and there aren't any pending deferred notifications.\n        if (!trackingChanges || pendingNotifications) {\n            return;\n        }\n        var diff = [],\n            arrayLength = rawArray.length,\n            argsLength = args.length,\n            offset = 0;\n\n        function pushDiff(status, value, index) {\n            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n        }\n        switch (operationName) {\n            case 'push':\n                offset = arrayLength;\n            case 'unshift':\n                for (var index = 0; index < argsLength; index++) {\n                    pushDiff('added', args[index], offset + index);\n                }\n                break;\n\n            case 'pop':\n                offset = arrayLength - 1;\n            case 'shift':\n                if (arrayLength) {\n                    pushDiff('deleted', rawArray[offset], offset);\n                }\n                break;\n\n            case 'splice':\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n                    endAddIndex = startIndex + argsLength - 2,\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n                    additions = [], deletions = [];\n                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n                    if (index < endDeleteIndex)\n                        deletions.push(pushDiff('deleted', rawArray[index], index));\n                    if (index < endAddIndex)\n                        additions.push(pushDiff('added', args[argsIndex], index));\n                }\n                ko.utils.findMovesInArrayComparison(deletions, additions);\n                break;\n\n            default:\n                return;\n        }\n        cachedDiff = diff;\n    };\n};\nvar computedState = ko.utils.createSymbolOrString('_state');\n\nko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n    if (typeof evaluatorFunctionOrOptions === \"object\") {\n        // Single-parameter syntax - everything is on this \"options\" param\n        options = evaluatorFunctionOrOptions;\n    } else {\n        // Multi-parameter syntax - construct the options according to the params passed\n        options = options || {};\n        if (evaluatorFunctionOrOptions) {\n            options[\"read\"] = evaluatorFunctionOrOptions;\n        }\n    }\n    if (typeof options[\"read\"] != \"function\")\n        throw Error(\"Pass a function that returns the value of the ko.computed\");\n\n    var writeFunction = options[\"write\"];\n    var state = {\n        latestValue: undefined,\n        isStale: true,\n        isBeingEvaluated: false,\n        suppressDisposalUntilDisposeWhenReturnsFalse: false,\n        isDisposed: false,\n        pure: false,\n        isSleeping: false,\n        readFunction: options[\"read\"],\n        evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\n        disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\n        disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\n        domNodeDisposalCallback: null,\n        dependencyTracking: {},\n        dependenciesCount: 0,\n        evaluationTimeoutInstance: null\n    };\n\n    function computedObservable() {\n        if (arguments.length > 0) {\n            if (typeof writeFunction === \"function\") {\n                // Writing a value\n                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n            } else {\n                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n            }\n            return this; // Permits chained assignments\n        } else {\n            // Reading the value\n            ko.dependencyDetection.registerDependency(computedObservable);\n            if (state.isStale || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\n                computedObservable.evaluateImmediate();\n            }\n            return state.latestValue;\n        }\n    }\n\n    computedObservable[computedState] = state;\n    computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(computedObservable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(computedObservable);\n\n    // Inherit from 'computed'\n    ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\n\n    if (options['pure']) {\n        state.pure = true;\n        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n        ko.utils.extend(computedObservable, pureComputedOverrides);\n    } else if (options['deferEvaluation']) {\n        ko.utils.extend(computedObservable, deferEvaluationOverrides);\n    }\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](computedObservable, true);\n    }\n\n    if (DEBUG) {\n        // #1731 - Aid debugging by exposing the computed's options\n        computedObservable[\"_options\"] = options;\n    }\n\n    if (state.disposeWhenNodeIsRemoved) {\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\n        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\n        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n        // be documented or used by application code, as it's likely to change in a future version of KO.\n        if (!state.disposeWhenNodeIsRemoved.nodeType) {\n            state.disposeWhenNodeIsRemoved = null;\n        }\n    }\n\n    // Evaluate, unless sleeping or deferEvaluation is true\n    if (!state.isSleeping && !options['deferEvaluation']) {\n        computedObservable.evaluateImmediate();\n    }\n\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n    if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\n        ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\n            computedObservable.dispose();\n        });\n    }\n\n    return computedObservable;\n};\n\n// Utility function that disposes a given dependencyTracking entry\nfunction computedDisposeDependencyCallback(id, entryToDispose) {\n    if (entryToDispose !== null && entryToDispose.dispose) {\n        entryToDispose.dispose();\n    }\n}\n\n// This function gets called each time a dependency is detected while evaluating a computed.\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\nfunction computedBeginDependencyDetectionCallback(subscribable, id) {\n    var computedObservable = this.computedObservable,\n        state = computedObservable[computedState];\n    if (!state.isDisposed) {\n        if (this.disposalCount && this.disposalCandidates[id]) {\n            // Don't want to dispose this subscription, as it's still being used\n            computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\n            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n            --this.disposalCount;\n        } else if (!state.dependencyTracking[id]) {\n            // Brand new subscription - add it\n            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\n        }\n    }\n}\n\nvar computedFn = {\n    \"equalityComparer\": valuesArePrimitiveAndEqual,\n    getDependenciesCount: function () {\n        return this[computedState].dependenciesCount;\n    },\n    addDependencyTracking: function (id, target, trackingObj) {\n        if (this[computedState].pure && target === this) {\n            throw Error(\"A 'pure' computed must not be called recursively\");\n        }\n\n        this[computedState].dependencyTracking[id] = trackingObj;\n        trackingObj._order = this[computedState].dependenciesCount++;\n        trackingObj._version = target.getVersion();\n    },\n    haveDependenciesChanged: function () {\n        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\n        for (id in dependencyTracking) {\n            if (dependencyTracking.hasOwnProperty(id)) {\n                dependency = dependencyTracking[id];\n                if (dependency._target.hasChanged(dependency._version)) {\n                    return true;\n                }\n            }\n        }\n    },\n    markDirty: function () {\n        // Process \"dirty\" events if we can handle delayed notifications\n        if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n            this._evalDelayed();\n        }\n    },\n    isActive: function () {\n        return this[computedState].isStale || this[computedState].dependenciesCount > 0;\n    },\n    respondToChange: function () {\n        // Ignore \"change\" events if we've already scheduled a delayed notification\n        if (!this._notificationIsPending) {\n            this.evaluatePossiblyAsync();\n        }\n    },\n    subscribeToDependency: function (target) {\n        if (target._deferUpdates && !this[computedState].disposeWhenNodeIsRemoved) {\n            var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n                changeSub = target.subscribe(this.respondToChange, this);\n            return {\n                _target: target,\n                dispose: function () {\n                    dirtySub.dispose();\n                    changeSub.dispose();\n                }\n            };\n        } else {\n            return target.subscribe(this.evaluatePossiblyAsync, this);\n        }\n    },\n    evaluatePossiblyAsync: function () {\n        var computedObservable = this,\n            throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n            clearTimeout(this[computedState].evaluationTimeoutInstance);\n            this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\n                computedObservable.evaluateImmediate(true /*notifyChange*/);\n            }, throttleEvaluationTimeout);\n        } else if (computedObservable._evalDelayed) {\n            computedObservable._evalDelayed();\n        } else {\n            computedObservable.evaluateImmediate(true /*notifyChange*/);\n        }\n    },\n    evaluateImmediate: function (notifyChange) {\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            disposeWhen = state.disposeWhen;\n\n        if (state.isBeingEvaluated) {\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n            return;\n        }\n\n        // Do not evaluate (and possibly capture new dependencies) if disposed\n        if (state.isDisposed) {\n            return;\n        }\n\n        if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\n            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\n            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\n                computedObservable.dispose();\n                return;\n            }\n        } else {\n            // It just did return false, so we can stop suppressing now\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n        }\n\n        state.isBeingEvaluated = true;\n        try {\n            this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n        } finally {\n            state.isBeingEvaluated = false;\n        }\n\n        if (!state.dependenciesCount) {\n            computedObservable.dispose();\n        }\n    },\n    evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\n        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\n        var computedObservable = this,\n            state = computedObservable[computedState];\n\n        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n        // Then, during evaluation, we cross off any that are in fact still being used.\n        var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\n            dependencyDetectionContext = {\n                computedObservable: computedObservable,\n                disposalCandidates: state.dependencyTracking,\n                disposalCount: state.dependenciesCount\n            };\n\n        ko.dependencyDetection.begin({\n            callbackTarget: dependencyDetectionContext,\n            callback: computedBeginDependencyDetectionCallback,\n            computed: computedObservable,\n            isInitial: isInitial\n        });\n\n        state.dependencyTracking = {};\n        state.dependenciesCount = 0;\n\n        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\n        if (computedObservable.isDifferent(state.latestValue, newValue)) {\n            if (!state.isSleeping) {\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\n            }\n\n            state.latestValue = newValue;\n\n            if (state.isSleeping) {\n                computedObservable.updateVersion();\n            } else if (notifyChange) {\n                computedObservable[\"notifySubscribers\"](state.latestValue);\n            }\n        }\n\n        if (isInitial) {\n            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n        }\n    },\n    evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\n        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n        // overhead of computed evaluation (on V8 at least).\n\n        try {\n            var readFunction = state.readFunction;\n            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n        } finally {\n            ko.dependencyDetection.end();\n\n            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n                ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n            }\n\n            state.isStale = false;\n        }\n    },\n    peek: function () {\n        // Peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n        var state = this[computedState];\n        if ((state.isStale && !state.dependenciesCount) || (state.isSleeping && this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return state.latestValue;\n    },\n    limit: function (limitFunction) {\n        // Override the limit function with one that delays evaluation as well\n        ko.subscribable['fn'].limit.call(this, limitFunction);\n        this._evalDelayed = function () {\n            this._limitBeforeChange(this[computedState].latestValue);\n\n            this[computedState].isStale = true; // Mark as dirty\n\n            // Pass the observable to the \"limit\" code, which will access it when\n            // it's time to do the notification.\n            this._limitChange(this);\n        }\n    },\n    dispose: function () {\n        var state = this[computedState];\n        if (!state.isSleeping && state.dependencyTracking) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose)\n                    dependency.dispose();\n            });\n        }\n        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\n            ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\n        }\n        state.dependencyTracking = null;\n        state.dependenciesCount = 0;\n        state.isDisposed = true;\n        state.isStale = false;\n        state.isSleeping = false;\n        state.disposeWhenNodeIsRemoved = null;\n    }\n};\n\nvar pureComputedOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // If asleep, wake up the computed by subscribing to any dependencies.\n        var computedObservable = this,\n            state = computedObservable[computedState];\n        if (!state.isDisposed && state.isSleeping && event == 'change') {\n            state.isSleeping = false;\n            if (state.isStale || computedObservable.haveDependenciesChanged()) {\n                state.dependencyTracking = null;\n                state.dependenciesCount = 0;\n                state.isStale = true;\n                computedObservable.evaluateImmediate();\n            } else {\n                // First put the dependencies in order\n                var dependeciesOrder = [];\n                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                    dependeciesOrder[dependency._order] = id;\n                });\n                // Next, subscribe to each one\n                ko.utils.arrayForEach(dependeciesOrder, function (id, order) {\n                    var dependency = state.dependencyTracking[id],\n                        subscription = computedObservable.subscribeToDependency(dependency._target);\n                    subscription._order = order;\n                    subscription._version = dependency._version;\n                    state.dependencyTracking[id] = subscription;\n                });\n            }\n            if (!state.isDisposed) {     // test since evaluating could trigger disposal\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n            }\n        }\n    },\n    afterSubscriptionRemove: function (event) {\n        var state = this[computedState];\n        if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose) {\n                    state.dependencyTracking[id] = {\n                        _target: dependency._target,\n                        _order: dependency._order,\n                        _version: dependency._version\n                    };\n                    dependency.dispose();\n                }\n            });\n            state.isSleeping = true;\n            this[\"notifySubscribers\"](undefined, \"asleep\");\n        }\n    },\n    getVersion: function () {\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\n        // simply return the version number. Instead, we check if any of the dependencies have\n        // changed and conditionally re-evaluate the computed observable.\n        var state = this[computedState];\n        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return ko.subscribable['fn'].getVersion.call(this);\n    }\n};\n\nvar deferEvaluationOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n        if (event == 'change' || event == 'beforeChange') {\n            this.peek();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.computed constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\n}\n\n// Set the proto chain values for ko.hasPrototype\nvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\nko.computed[protoProp] = ko.observable;\ncomputedFn[protoProp] = ko.computed;\n\nko.isComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed);\n};\n\nko.isPureComputed = function (instance) {\n    return ko.hasPrototype(instance, ko.computed)\n        && instance[computedState] && instance[computedState].pure;\n};\n\nko.exportSymbol('computed', ko.computed);\nko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\nko.exportSymbol('isComputed', ko.isComputed);\nko.exportSymbol('isPureComputed', ko.isPureComputed);\nko.exportSymbol('computed.fn', computedFn);\nko.exportProperty(computedFn, 'peek', computedFn.peek);\nko.exportProperty(computedFn, 'dispose', computedFn.dispose);\nko.exportProperty(computedFn, 'isActive', computedFn.isActive);\nko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\n\nko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n    if (typeof evaluatorFunctionOrOptions === 'function') {\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\n    } else {\n        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\n        evaluatorFunctionOrOptions['pure'] = true;\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n    }\n}\nko.exportSymbol('pureComputed', ko.pureComputed);\n\n(function() {\n    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathalogical case where an observable's current value is itself (or similar reference cycle)\n\n    ko.toJS = function(rootObject) {\n        if (arguments.length == 0)\n            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\n        // We just unwrap everything at every level in the object graph\n        return mapJsObjectGraph(rootObject, function(valueToMap) {\n            // Loop because an observable's value might in turn be another observable wrapper\n            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\n                valueToMap = valueToMap();\n            return valueToMap;\n        });\n    };\n\n    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\n        var plainJavaScriptObject = ko.toJS(rootObject);\n        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\n    };\n\n    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n        visitedObjects = visitedObjects || new objectLookup();\n\n        rootObject = mapInputCallback(rootObject);\n        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n        if (!canHaveProperties)\n            return rootObject;\n\n        var outputProperties = rootObject instanceof Array ? [] : {};\n        visitedObjects.save(rootObject, outputProperties);\n\n        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\n            var propertyValue = mapInputCallback(rootObject[indexer]);\n\n            switch (typeof propertyValue) {\n                case \"boolean\":\n                case \"number\":\n                case \"string\":\n                case \"function\":\n                    outputProperties[indexer] = propertyValue;\n                    break;\n                case \"object\":\n                case \"undefined\":\n                    var previouslyMappedValue = visitedObjects.get(propertyValue);\n                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\n                        ? previouslyMappedValue\n                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n                    break;\n            }\n        });\n\n        return outputProperties;\n    }\n\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n        if (rootObject instanceof Array) {\n            for (var i = 0; i < rootObject.length; i++)\n                visitorCallback(i);\n\n            // For arrays, also respect toJSON property for custom mappings (fixes #278)\n            if (typeof rootObject['toJSON'] == 'function')\n                visitorCallback('toJSON');\n        } else {\n            for (var propertyName in rootObject) {\n                visitorCallback(propertyName);\n            }\n        }\n    };\n\n    function objectLookup() {\n        this.keys = [];\n        this.values = [];\n    };\n\n    objectLookup.prototype = {\n        constructor: objectLookup,\n        save: function(key, value) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            if (existingIndex >= 0)\n                this.values[existingIndex] = value;\n            else {\n                this.keys.push(key);\n                this.values.push(value);\n            }\n        },\n        get: function(key) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\n        }\n    };\n})();\n\nko.exportSymbol('toJS', ko.toJS);\nko.exportSymbol('toJSON', ko.toJSON);\n(function () {\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n    ko.selectExtensions = {\n        readValue : function(element) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    if (element[hasDomDataExpandoProperty] === true)\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n                    return ko.utils.ieVersion <= 7\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n                        : element.value;\n                case 'select':\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n                default:\n                    return element.value;\n            }\n        },\n\n        writeValue: function(element, value, allowUnset) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    switch(typeof value) {\n                        case \"string\":\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n                            if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n                                delete element[hasDomDataExpandoProperty];\n                            }\n                            element.value = value;\n                            break;\n                        default:\n                            // Store arbitrary object using DomData\n                            ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n                            element[hasDomDataExpandoProperty] = true;\n\n                            // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n                            element.value = typeof value === \"number\" ? value : \"\";\n                            break;\n                    }\n                    break;\n                case 'select':\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n                        value = undefined;\n                    var selection = -1;\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n                        // Include special check to handle selecting a caption with a blank string value\n                        if (optionValue == value || (optionValue == \"\" && value === undefined)) {\n                            selection = i;\n                            break;\n                        }\n                    }\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n                        element.selectedIndex = selection;\n                    }\n                    break;\n                default:\n                    if ((value === null) || (value === undefined))\n                        value = \"\";\n                    element.value = value;\n                    break;\n            }\n        }\n    };\n})();\n\nko.exportSymbol('selectExtensions', ko.selectExtensions);\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\nko.expressionRewriting = (function () {\n    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\n\n    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\n\n    function getWriteableValue(expression) {\n        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\n            return false;\n        var match = expression.match(javaScriptAssignmentTarget);\n        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\n    }\n\n    // The following regular expressions will be used to split an object-literal string into tokens\n\n        // These two match strings, either with double quotes or single quotes\n    var stringDouble = '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"',\n        stringSingle = \"'(?:[^'\\\\\\\\]|\\\\\\\\.)*'\",\n        // Matches a regular expression (text enclosed by slashes), but will also match sets of divisions\n        // as a regular expression (this is handled by the parsing loop below).\n        stringRegexp = '/(?:[^/\\\\\\\\]|\\\\\\\\.)*/\\w*',\n        // These characters have special meaning to the parser and must not appear in the middle of a\n        // token, except as part of a string.\n        specials = ',\"\\'{}()/:[\\\\]',\n        // Match text (at least two characters) that does not contain any of the above special characters,\n        // although some of the special characters are allowed to start it (all but the colon and comma).\n        // The text can contain spaces, but leading or trailing spaces are skipped.\n        everyThingElse = '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\n        // Match any non-space character not matched already. This will match colons and commas, since they're\n        // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n        // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n        oneNotSpace = '[^\\\\s]',\n\n        // Create the actual regular expression by or-ing the above strings. The order is important.\n        bindingToken = RegExp(stringDouble + '|' + stringSingle + '|' + stringRegexp + '|' + everyThingElse + '|' + oneNotSpace, 'g'),\n\n        // Match end of previous token to determine whether a slash is a division or regex.\n        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\n        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\n\n    function parseObjectLiteral(objectLiteralString) {\n        // Trim leading and trailing spaces from the string\n        var str = ko.utils.stringTrim(objectLiteralString);\n\n        // Trim braces '{' surrounding the whole object literal\n        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\n\n        // Split into tokens\n        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\n\n        if (toks) {\n            // Append a comma so that we don't need a separate code block to deal with the last item\n            toks.push(',');\n\n            for (var i = 0, tok; tok = toks[i]; ++i) {\n                var c = tok.charCodeAt(0);\n                // A comma signals the end of a key/value pair if depth is zero\n                if (c === 44) { // \",\"\n                    if (depth <= 0) {\n                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\n                        key = depth = 0;\n                        values = [];\n                        continue;\n                    }\n                // Simply skip the colon that separates the name and value\n                } else if (c === 58) { // \":\"\n                    if (!depth && !key && values.length === 1) {\n                        key = values.pop();\n                        continue;\n                    }\n                // A set of slashes is initially matched as a regular expression, but could be division\n                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n                    // Look at the end of the previous token to determine if the slash is actually division\n                    var match = toks[i-1].match(divisionLookBehind);\n                    if (match && !keywordRegexLookBehind[match[0]]) {\n                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n                        str = str.substr(str.indexOf(tok) + 1);\n                        toks = str.match(bindingToken);\n                        toks.push(',');\n                        i = -1;\n                        // Continue with just the slash\n                        tok = '/';\n                    }\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n                    ++depth;\n                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n                    --depth;\n                // The key will be the first token; if it's a string, trim the quotes\n                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n                    tok = tok.slice(1, -1);\n                }\n                values.push(tok);\n            }\n        }\n        return result;\n    }\n\n    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\n    var twoWayBindings = {};\n\n    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\n        bindingOptions = bindingOptions || {};\n\n        function processKeyValue(key, val) {\n            var writableVal;\n            function callPreprocessHook(obj) {\n                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\n            }\n            if (!bindingParams) {\n                if (!callPreprocessHook(ko['getBindingHandler'](key)))\n                    return;\n\n                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\n                    // For two-way bindings, provide a write method in case the value\n                    // isn't a writable observable.\n                    propertyAccessorResultStrings.push(\"'\" + key + \"':function(_z){\" + writableVal + \"=_z}\");\n                }\n            }\n            // Values are wrapped in a function so that each value can be accessed independently\n            if (makeValueAccessors) {\n                val = 'function(){return ' + val + ' }';\n            }\n            resultStrings.push(\"'\" + key + \"':\" + val);\n        }\n\n        var resultStrings = [],\n            propertyAccessorResultStrings = [],\n            makeValueAccessors = bindingOptions['valueAccessors'],\n            bindingParams = bindingOptions['bindingParams'],\n            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\n        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\n            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\n        });\n\n        if (propertyAccessorResultStrings.length)\n            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n\n        return resultStrings.join(\",\");\n    }\n\n    return {\n        bindingRewriteValidators: [],\n\n        twoWayBindings: twoWayBindings,\n\n        parseObjectLiteral: parseObjectLiteral,\n\n        preProcessBindings: preProcessBindings,\n\n        keyValueArrayContainsKey: function(keyValueArray, key) {\n            for (var i = 0; i < keyValueArray.length; i++)\n                if (keyValueArray[i]['key'] == key)\n                    return true;\n            return false;\n        },\n\n        // Internal, private KO utility for updating model properties from within bindings\n        // property:            If the property being updated is (or might be) an observable, pass it here\n        //                      If it turns out to be a writable observable, it will be written to directly\n        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\n        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n        // value:               The value to be written\n        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n        //                      it is !== existing value on that writable observable\n        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\n            if (!property || !ko.isObservable(property)) {\n                var propWriters = allBindings.get('_ko_property_writers');\n                if (propWriters && propWriters[key])\n                    propWriters[key](value);\n            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n                property(value);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('expressionRewriting', ko.expressionRewriting);\nko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\nko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\nko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\n\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n// as an internal implementation detail in the short term.\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\nko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\n\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\nko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\nko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\n(function() {\n    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n    // of that virtual hierarchy\n    //\n    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n    // without having to scatter special cases all over the binding and templating code.\n\n    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\n    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\n    // So, use node.text where available, and node.nodeValue elsewhere\n    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\n\n    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\n    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\n    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\n\n    function isStartComment(node) {\n        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function isEndComment(node) {\n        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function getVirtualChildren(startComment, allowUnbalanced) {\n        var currentNode = startComment;\n        var depth = 1;\n        var children = [];\n        while (currentNode = currentNode.nextSibling) {\n            if (isEndComment(currentNode)) {\n                depth--;\n                if (depth === 0)\n                    return children;\n            }\n\n            children.push(currentNode);\n\n            if (isStartComment(currentNode))\n                depth++;\n        }\n        if (!allowUnbalanced)\n            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\n        return null;\n    }\n\n    function getMatchingEndComment(startComment, allowUnbalanced) {\n        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\n        if (allVirtualChildren) {\n            if (allVirtualChildren.length > 0)\n                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n            return startComment.nextSibling;\n        } else\n            return null; // Must have no matching end comment, and allowUnbalanced is true\n    }\n\n    function getUnbalancedChildTags(node) {\n        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n        var childNode = node.firstChild, captureRemaining = null;\n        if (childNode) {\n            do {\n                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n                    captureRemaining.push(childNode);\n                else if (isStartComment(childNode)) {\n                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\n                        childNode = matchingEndComment;\n                    else\n                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n                } else if (isEndComment(childNode)) {\n                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n                }\n            } while (childNode = childNode.nextSibling);\n        }\n        return captureRemaining;\n    }\n\n    ko.virtualElements = {\n        allowedBindings: {},\n\n        childNodes: function(node) {\n            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\n        },\n\n        emptyNode: function(node) {\n            if (!isStartComment(node))\n                ko.utils.emptyDomNode(node);\n            else {\n                var virtualChildren = ko.virtualElements.childNodes(node);\n                for (var i = 0, j = virtualChildren.length; i < j; i++)\n                    ko.removeNode(virtualChildren[i]);\n            }\n        },\n\n        setDomNodeChildren: function(node, childNodes) {\n            if (!isStartComment(node))\n                ko.utils.setDomNodeChildren(node, childNodes);\n            else {\n                ko.virtualElements.emptyNode(node);\n                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n            }\n        },\n\n        prepend: function(containerNode, nodeToPrepend) {\n            if (!isStartComment(containerNode)) {\n                if (containerNode.firstChild)\n                    containerNode.insertBefore(nodeToPrepend, containerNode.firstChild);\n                else\n                    containerNode.appendChild(nodeToPrepend);\n            } else {\n                // Start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToPrepend, containerNode.nextSibling);\n            }\n        },\n\n        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\n            if (!insertAfterNode) {\n                ko.virtualElements.prepend(containerNode, nodeToInsert);\n            } else if (!isStartComment(containerNode)) {\n                // Insert after insertion point\n                if (insertAfterNode.nextSibling)\n                    containerNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n                else\n                    containerNode.appendChild(nodeToInsert);\n            } else {\n                // Children of start comments must always have a parent and at least one following sibling (the end comment)\n                containerNode.parentNode.insertBefore(nodeToInsert, insertAfterNode.nextSibling);\n            }\n        },\n\n        firstChild: function(node) {\n            if (!isStartComment(node))\n                return node.firstChild;\n            if (!node.nextSibling || isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        nextSibling: function(node) {\n            if (isStartComment(node))\n                node = getMatchingEndComment(node);\n            if (node.nextSibling && isEndComment(node.nextSibling))\n                return null;\n            return node.nextSibling;\n        },\n\n        hasBindingValue: isStartComment,\n\n        virtualNodeBindingValue: function(node) {\n            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\n            return regexMatch ? regexMatch[1] : null;\n        },\n\n        normaliseVirtualElementDomStructure: function(elementVerified) {\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n            // that are direct descendants of <ul> into the preceding <li>)\n            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\n                return;\n\n            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n            // must be intended to appear *after* that child, so move them there.\n            var childNode = elementVerified.firstChild;\n            if (childNode) {\n                do {\n                    if (childNode.nodeType === 1) {\n                        var unbalancedTags = getUnbalancedChildTags(childNode);\n                        if (unbalancedTags) {\n                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n                            var nodeToInsertBefore = childNode.nextSibling;\n                            for (var i = 0; i < unbalancedTags.length; i++) {\n                                if (nodeToInsertBefore)\n                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n                                else\n                                    elementVerified.appendChild(unbalancedTags[i]);\n                            }\n                        }\n                    }\n                } while (childNode = childNode.nextSibling);\n            }\n        }\n    };\n})();\nko.exportSymbol('virtualElements', ko.virtualElements);\nko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\nko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\nko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\nko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\nko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\n(function() {\n    var defaultBindingAttributeName = \"data-bind\";\n\n    ko.bindingProvider = function() {\n        this.bindingCache = {};\n    };\n\n    ko.utils.extend(ko.bindingProvider.prototype, {\n        'nodeHasBindings': function(node) {\n            switch (node.nodeType) {\n                case 1: // Element\n                    return node.getAttribute(defaultBindingAttributeName) != null\n                        || ko.components['getComponentNameForNode'](node);\n                case 8: // Comment node\n                    return ko.virtualElements.hasBindingValue(node);\n                default: return false;\n            }\n        },\n\n        'getBindings': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n        },\n\n        'getBindingAccessors': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'getBindingsString': function(node, bindingContext) {\n            switch (node.nodeType) {\n                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\n                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\n                default: return null;\n            }\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\n            try {\n                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\n                return bindingFunction(bindingContext, node);\n            } catch (ex) {\n                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n                throw ex;\n            }\n        }\n    });\n\n    ko.bindingProvider['instance'] = new ko.bindingProvider();\n\n    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\n        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\n        return cache[cacheKey]\n            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\n    }\n\n    function createBindingsStringEvaluator(bindingsString, options) {\n        // Build the source for a function that evaluates \"expression\"\n        // For each scope variable, add an extra level of \"with\" nesting\n        // Example result: with(sc1) { with(sc0) { return (expression) } }\n        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\n            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\n        return new Function(\"$context\", \"$element\", functionBody);\n    }\n})();\n\nko.exportSymbol('bindingProvider', ko.bindingProvider);\n(function () {\n    ko.bindingHandlers = {};\n\n    // The following element types will not be recursed into during binding.\n    var bindingDoesNotRecurseIntoElementTypes = {\n        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\n        // because it's unexpected and a potential XSS issue.\n        // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\n        // and because such elements' contents are always intended to be bound in a different context\n        // from where they appear in the document.\n        'script': true,\n        'textarea': true,\n        'template': true\n    };\n\n    // Use an overridable method for retrieving binding handlers so that a plugins may support dynamically created handlers\n    ko['getBindingHandler'] = function(bindingKey) {\n        return ko.bindingHandlers[bindingKey];\n    };\n\n    // The ko.bindingContext constructor is only called directly to create the root context. For child\n    // contexts, use bindingContext.createChildContext or bindingContext.extend.\n    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback) {\n\n        // The binding context object includes static properties for the current, parent, and root view models.\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\n        // any child contexts, must be updated when the view model is changed.\n        function updateContext() {\n            // Most of the time, the context will directly get a view model object, but if a function is given,\n            // we call the function to retrieve the view model. If the function accesses any observables or returns\n            // an observable, the dependency is tracked, and those observables can later cause the binding\n            // context to be updated.\n            var dataItemOrObservable = isFunc ? dataItemOrAccessor() : dataItemOrAccessor,\n                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\n\n            if (parentContext) {\n                // When a \"parent\" context is given, register a dependency on the parent context. Thus whenever the\n                // parent context is updated, this context will also be updated.\n                if (parentContext._subscribable)\n                    parentContext._subscribable();\n\n                // Copy $root and any custom properties from the parent context\n                ko.utils.extend(self, parentContext);\n\n                // Because the above copy overwrites our own properties, we need to reset them.\n                // During the first execution, \"subscribable\" isn't set, so don't bother doing the update then.\n                if (subscribable) {\n                    self._subscribable = subscribable;\n                }\n            } else {\n                self['$parents'] = [];\n                self['$root'] = dataItem;\n\n                // Export 'ko' in the binding context so it will be available in bindings and templates\n                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\n                // See https://github.com/SteveSanderson/knockout/issues/490\n                self['ko'] = ko;\n            }\n            self['$rawData'] = dataItemOrObservable;\n            self['$data'] = dataItem;\n            if (dataItemAlias)\n                self[dataItemAlias] = dataItem;\n\n            // The extendCallback function is provided when creating a child context or extending a context.\n            // It handles the specific actions needed to finish setting up the binding context. Actions in this\n            // function could also add dependencies to this binding context.\n            if (extendCallback)\n                extendCallback(self, parentContext, dataItem);\n\n            return self['$data'];\n        }\n        function disposeWhen() {\n            return nodes && !ko.utils.anyDomNodeIsAttachedToDocument(nodes);\n        }\n\n        var self = this,\n            isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor),\n            nodes,\n            subscribable = ko.dependentObservable(updateContext, null, { disposeWhen: disposeWhen, disposeWhenNodeIsRemoved: true });\n\n        // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\n        // subscribed to any observables that were accessed in the process. If there is nothing to track, the\n        // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\n        // the context object.\n        if (subscribable.isActive()) {\n            self._subscribable = subscribable;\n\n            // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\n            subscribable['equalityComparer'] = null;\n\n            // We need to be able to dispose of this computed observable when it's no longer needed. This would be\n            // easy if we had a single node to watch, but binding contexts can be used by many different nodes, and\n            // we cannot assume that those nodes have any relation to each other. So instead we track any node that\n            // the context is attached to, and dispose the computed when all of those nodes have been cleaned.\n\n            // Add properties to *subscribable* instead of *self* because any properties added to *self* may be overwritten on updates\n            nodes = [];\n            subscribable._addNode = function(node) {\n                nodes.push(node);\n                ko.utils.domNodeDisposal.addDisposeCallback(node, function(node) {\n                    ko.utils.arrayRemoveItem(nodes, node);\n                    if (!nodes.length) {\n                        subscribable.dispose();\n                        self._subscribable = subscribable = undefined;\n                    }\n                });\n            };\n        }\n    }\n\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\n    // any observables, the new child context will automatically get a dependency on the parent context.\n    // But this does not mean that the $data value of the child context will also get updated. If the child\n    // view model also depends on the parent view model, you must provide a function that returns the correct\n    // view model on each update.\n    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback) {\n        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function(self, parentContext) {\n            // Extend the context hierarchy by setting the appropriate pointers\n            self['$parentContext'] = parentContext;\n            self['$parent'] = parentContext['$data'];\n            self['$parents'] = (parentContext['$parents'] || []).slice(0);\n            self['$parents'].unshift(self['$parent']);\n            if (extendCallback)\n                extendCallback(self);\n        });\n    };\n\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\n    // when an observable view model is updated.\n    ko.bindingContext.prototype['extend'] = function(properties) {\n        // If the parent context references an observable view model, \"_subscribable\" will always be the\n        // latest view model object. If not, \"_subscribable\" isn't set, and we can use the static \"$data\" value.\n        return new ko.bindingContext(this._subscribable || this['$data'], this, null, function(self, parentContext) {\n            // This \"child\" context doesn't directly track a parent observable view model,\n            // so we need to manually set the $rawData value to match the parent.\n            self['$rawData'] = parentContext['$rawData'];\n            ko.utils.extend(self, typeof(properties) == \"function\" ? properties() : properties);\n        });\n    };\n\n    // Returns the valueAccesor function for a binding value\n    function makeValueAccessor(value) {\n        return function() {\n            return value;\n        };\n    }\n\n    // Returns the value of a valueAccessor function\n    function evaluateValueAccessor(valueAccessor) {\n        return valueAccessor();\n    }\n\n    // Given a function that returns bindings, create and return a new object that contains\n    // binding value-accessors functions. Each accessor function calls the original function\n    // so that it always gets the latest value and all dependencies are captured. This is used\n    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\n    function makeAccessorsFromFunction(callback) {\n        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\n            return function() {\n                return callback()[key];\n            };\n        });\n    }\n\n    // Given a bindings function or object, create and return a new object that contains\n    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\n    function makeBindingAccessors(bindings, context, node) {\n        if (typeof bindings === 'function') {\n            return makeAccessorsFromFunction(bindings.bind(null, context, node));\n        } else {\n            return ko.utils.objectMap(bindings, makeValueAccessor);\n        }\n    }\n\n    // This function is used if the binding provider doesn't include a getBindingAccessors function.\n    // It must be called with 'this' set to the provider instance.\n    function getBindingsAndMakeAccessors(node, context) {\n        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\n    }\n\n    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\n        var validator = ko.virtualElements.allowedBindings[bindingName];\n        if (!validator)\n            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\n    }\n\n    function applyBindingsToDescendantsInternal (bindingContext, elementOrVirtualElement, bindingContextsMayDifferFromDomParentElement) {\n        var currentChild,\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement),\n            provider = ko.bindingProvider['instance'],\n            preprocessNode = provider['preprocessNode'];\n\n        // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\n        // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\n        // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\n        // trigger insertion of <template> contents at that point in the document.\n        if (preprocessNode) {\n            while (currentChild = nextInQueue) {\n                nextInQueue = ko.virtualElements.nextSibling(currentChild);\n                preprocessNode.call(provider, currentChild);\n            }\n            // Reset nextInQueue for the next loop\n            nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n        }\n\n        while (currentChild = nextInQueue) {\n            // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\n            nextInQueue = ko.virtualElements.nextSibling(currentChild);\n            applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild, bindingContextsMayDifferFromDomParentElement);\n        }\n    }\n\n    function applyBindingsToNodeAndDescendantsInternal (bindingContext, nodeVerified, bindingContextMayDifferFromDomParentElement) {\n        var shouldBindDescendants = true;\n\n        // Perf optimisation: Apply bindings only if...\n        // (1) We need to store the binding context on this node (because it may differ from the DOM parent node's binding context)\n        //     Note that we can't store binding contexts on non-elements (e.g., text nodes), as IE doesn't allow expando properties for those\n        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\n        var isElement = (nodeVerified.nodeType === 1);\n        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\n\n        var shouldApplyBindings = (isElement && bindingContextMayDifferFromDomParentElement)             // Case (1)\n                               || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);       // Case (2)\n        if (shouldApplyBindings)\n            shouldBindDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext, bindingContextMayDifferFromDomParentElement)['shouldBindDescendants'];\n\n        if (shouldBindDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\n            // We're recursing automatically into (real or virtual) child nodes without changing binding contexts. So,\n            //  * For children of a *real* element, the binding context is certainly the same as on their DOM .parentNode,\n            //    hence bindingContextsMayDifferFromDomParentElement is false\n            //  * For children of a *virtual* element, we can't be sure. Evaluating .parentNode on those children may\n            //    skip over any number of intermediate virtual elements, any of which might define a custom binding context,\n            //    hence bindingContextsMayDifferFromDomParentElement is true\n            applyBindingsToDescendantsInternal(bindingContext, nodeVerified, /* bindingContextsMayDifferFromDomParentElement: */ !isElement);\n        }\n    }\n\n    var boundElementDomDataKey = ko.utils.domData.nextKey();\n\n\n    function topologicalSortBindings(bindings) {\n        // Depth-first sort\n        var result = [],                // The list of key/handler pairs that we will return\n            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\n            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\n        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\n            if (!bindingsConsidered[bindingKey]) {\n                var binding = ko['getBindingHandler'](bindingKey);\n                if (binding) {\n                    // First add dependencies (if any) of the current binding\n                    if (binding['after']) {\n                        cyclicDependencyStack.push(bindingKey);\n                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\n                            if (bindings[bindingDependencyKey]) {\n                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\n                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\n                                } else {\n                                    pushBinding(bindingDependencyKey);\n                                }\n                            }\n                        });\n                        cyclicDependencyStack.length--;\n                    }\n                    // Next add the current binding\n                    result.push({ key: bindingKey, handler: binding });\n                }\n                bindingsConsidered[bindingKey] = true;\n            }\n        });\n\n        return result;\n    }\n\n    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext, bindingContextMayDifferFromDomParentElement) {\n        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\n        var alreadyBound = ko.utils.domData.get(node, boundElementDomDataKey);\n        if (!sourceBindings) {\n            if (alreadyBound) {\n                throw Error(\"You cannot apply bindings multiple times to the same element.\");\n            }\n            ko.utils.domData.set(node, boundElementDomDataKey, true);\n        }\n\n        // Optimization: Don't store the binding context on this node if it's definitely the same as on node.parentNode, because\n        // we can easily recover it just by scanning up the node's ancestors in the DOM\n        // (note: here, parent node means \"real DOM parent\" not \"virtual parent\", as there's no O(1) way to find the virtual parent)\n        if (!alreadyBound && bindingContextMayDifferFromDomParentElement)\n            ko.storedBindingContextForNode(node, bindingContext);\n\n        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\n        var bindings;\n        if (sourceBindings && typeof sourceBindings !== 'function') {\n            bindings = sourceBindings;\n        } else {\n            var provider = ko.bindingProvider['instance'],\n                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\n\n            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\n            // the binding context is updated or if the binding provider accesses observables.\n            var bindingsUpdater = ko.dependentObservable(\n                function() {\n                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\n                    // Register a dependency on the binding context to support observable view models.\n                    if (bindings && bindingContext._subscribable)\n                        bindingContext._subscribable();\n                    return bindings;\n                },\n                null, { disposeWhenNodeIsRemoved: node }\n            );\n\n            if (!bindings || !bindingsUpdater.isActive())\n                bindingsUpdater = null;\n        }\n\n        var bindingHandlerThatControlsDescendantBindings;\n        if (bindings) {\n            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\n            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\n            // the latest binding value and registers a dependency on the binding updater.\n            var getValueAccessor = bindingsUpdater\n                ? function(bindingKey) {\n                    return function() {\n                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\n                    };\n                } : function(bindingKey) {\n                    return bindings[bindingKey];\n                };\n\n            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\n            function allBindings() {\n                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\n            }\n            // The following is the 3.x allBindings API\n            allBindings['get'] = function(key) {\n                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\n            };\n            allBindings['has'] = function(key) {\n                return key in bindings;\n            };\n\n            // First put the bindings into the right order\n            var orderedBindings = topologicalSortBindings(bindings);\n\n            // Go through the sorted bindings, calling init and update for each\n            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\n                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\n                // so bindingKeyAndHandler.handler will always be nonnull.\n                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\n                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\n                    bindingKey = bindingKeyAndHandler.key;\n\n                if (node.nodeType === 8) {\n                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\n                }\n\n                try {\n                    // Run init, ignoring any dependencies\n                    if (typeof handlerInitFn == \"function\") {\n                        ko.dependencyDetection.ignore(function() {\n                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n\n                            // If this binding handler claims to control descendant bindings, make a note of this\n                            if (initResult && initResult['controlsDescendantBindings']) {\n                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\n                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\n                                bindingHandlerThatControlsDescendantBindings = bindingKey;\n                            }\n                        });\n                    }\n\n                    // Run update in its own computed wrapper\n                    if (typeof handlerUpdateFn == \"function\") {\n                        ko.dependentObservable(\n                            function() {\n                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, bindingContext['$data'], bindingContext);\n                            },\n                            null,\n                            { disposeWhenNodeIsRemoved: node }\n                        );\n                    }\n                } catch (ex) {\n                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\n                    throw ex;\n                }\n            });\n        }\n\n        return {\n            'shouldBindDescendants': bindingHandlerThatControlsDescendantBindings === undefined\n        };\n    };\n\n    var storedBindingContextDomDataKey = ko.utils.domData.nextKey();\n    ko.storedBindingContextForNode = function (node, bindingContext) {\n        if (arguments.length == 2) {\n            ko.utils.domData.set(node, storedBindingContextDomDataKey, bindingContext);\n            if (bindingContext._subscribable)\n                bindingContext._subscribable._addNode(node);\n        } else {\n            return ko.utils.domData.get(node, storedBindingContextDomDataKey);\n        }\n    }\n\n    function getBindingContext(viewModelOrBindingContext) {\n        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\n            ? viewModelOrBindingContext\n            : new ko.bindingContext(viewModelOrBindingContext);\n    }\n\n    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\n        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(node);\n        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext), true);\n    };\n\n    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\n        var context = getBindingContext(viewModelOrBindingContext);\n        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\n    };\n\n    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\n        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\n            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    ko.applyBindings = function (viewModelOrBindingContext, rootNode) {\n        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\n        if (!jQueryInstance && window['jQuery']) {\n            jQueryInstance = window['jQuery'];\n        }\n\n        if (rootNode && (rootNode.nodeType !== 1) && (rootNode.nodeType !== 8))\n            throw new Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\n        rootNode = rootNode || window.document.body; // Make \"rootNode\" parameter optional\n\n        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode, true);\n    };\n\n    // Retrieving binding context from arbitrary nodes\n    ko.contextFor = function(node) {\n        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\n        switch (node.nodeType) {\n            case 1:\n            case 8:\n                var context = ko.storedBindingContextForNode(node);\n                if (context) return context;\n                if (node.parentNode) return ko.contextFor(node.parentNode);\n                break;\n        }\n        return undefined;\n    };\n    ko.dataFor = function(node) {\n        var context = ko.contextFor(node);\n        return context ? context['$data'] : undefined;\n    };\n\n    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\n    ko.exportSymbol('applyBindings', ko.applyBindings);\n    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\n    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\n    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\n    ko.exportSymbol('contextFor', ko.contextFor);\n    ko.exportSymbol('dataFor', ko.dataFor);\n})();\n(function(undefined) {\n    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\n        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\n\n    ko.components = {\n        get: function(componentName, callback) {\n            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\n            if (cachedDefinition) {\n                // It's already loaded and cached. Reuse the same definition object.\n                // Note that for API consistency, even cache hits complete asynchronously by default.\n                // You can bypass this by putting synchronous:true on your component config.\n                if (cachedDefinition.isSynchronousComponent) {\n                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\n                        callback(cachedDefinition.definition);\n                    });\n                } else {\n                    ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\n                }\n            } else {\n                // Join the loading process that is already underway, or start a new one.\n                loadComponentAndNotify(componentName, callback);\n            }\n        },\n\n        clearCachedDefinition: function(componentName) {\n            delete loadedDefinitionsCache[componentName];\n        },\n\n        _getFirstResultFromLoaders: getFirstResultFromLoaders\n    };\n\n    function getObjectOwnProperty(obj, propName) {\n        return obj.hasOwnProperty(propName) ? obj[propName] : undefined;\n    }\n\n    function loadComponentAndNotify(componentName, callback) {\n        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\n            completedAsync;\n        if (!subscribable) {\n            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\n            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\n            subscribable.subscribe(callback);\n\n            beginLoadingComponent(componentName, function(definition, config) {\n                var isSynchronousComponent = !!(config && config['synchronous']);\n                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\n                delete loadingSubscribablesCache[componentName];\n\n                // For API consistency, all loads complete asynchronously. However we want to avoid\n                // adding an extra task schedule if it's unnecessary (i.e., the completion is already\n                // async).\n                //\n                // You can bypass the 'always asynchronous' feature by putting the synchronous:true\n                // flag on your component configuration when you register it.\n                if (completedAsync || isSynchronousComponent) {\n                    // Note that notifySubscribers ignores any dependencies read within the callback.\n                    // See comment in loaderRegistryBehaviors.js for reasoning\n                    subscribable['notifySubscribers'](definition);\n                } else {\n                    ko.tasks.schedule(function() {\n                        subscribable['notifySubscribers'](definition);\n                    });\n                }\n            });\n            completedAsync = true;\n        } else {\n            subscribable.subscribe(callback);\n        }\n    }\n\n    function beginLoadingComponent(componentName, callback) {\n        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\n            if (config) {\n                // We have a config, so now load its definition\n                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\n                    callback(definition, config);\n                });\n            } else {\n                // The component has no config - it's unknown to all the loaders.\n                // Note that this is not an error (e.g., a module loading error) - that would abort the\n                // process and this callback would not run. For this callback to run, all loaders must\n                // have confirmed they don't know about this component.\n                callback(null, null);\n            }\n        });\n    }\n\n    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\n        // On the first call in the stack, start with the full set of loaders\n        if (!candidateLoaders) {\n            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\n        }\n\n        // Try the next candidate\n        var currentCandidateLoader = candidateLoaders.shift();\n        if (currentCandidateLoader) {\n            var methodInstance = currentCandidateLoader[methodName];\n            if (methodInstance) {\n                var wasAborted = false,\n                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\n                        if (wasAborted) {\n                            callback(null);\n                        } else if (result !== null) {\n                            // This candidate returned a value. Use it.\n                            callback(result);\n                        } else {\n                            // Try the next candidate\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n                        }\n                    }));\n\n                // Currently, loaders may not return anything synchronously. This leaves open the possibility\n                // that we'll extend the API to support synchronous return values in the future. It won't be\n                // a breaking change, because currently no loader is allowed to return anything except undefined.\n                if (synchronousReturnValue !== undefined) {\n                    wasAborted = true;\n\n                    // Method to suppress exceptions will remain undocumented. This is only to keep\n                    // KO's specs running tidily, since we can observe the loading got aborted without\n                    // having exceptions cluttering up the console too.\n                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\n                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n                    }\n                }\n            } else {\n                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n            }\n        } else {\n            // No candidates returned a value\n            callback(null);\n        }\n    }\n\n    // Reference the loaders via string name so it's possible for developers\n    // to replace the whole array by assigning to ko.components.loaders\n    ko.components['loaders'] = [];\n\n    ko.exportSymbol('components', ko.components);\n    ko.exportSymbol('components.get', ko.components.get);\n    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\n})();\n(function(undefined) {\n\n    // The default loader is responsible for two things:\n    // 1. Maintaining the default in-memory registry of component configuration objects\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n    // 2. Answering requests for components by fetching configuration objects\n    //    from that default in-memory registry and resolving them into standard\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\n    // Custom loaders may override either of these facilities, i.e.,\n    // 1. To supply configuration objects from some other source (e.g., conventions)\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\n    var defaultConfigRegistry = {};\n\n    ko.components.register = function(componentName, config) {\n        if (!config) {\n            throw new Error('Invalid configuration for ' + componentName);\n        }\n\n        if (ko.components.isRegistered(componentName)) {\n            throw new Error('Component ' + componentName + ' is already registered');\n        }\n\n        defaultConfigRegistry[componentName] = config;\n    };\n\n    ko.components.isRegistered = function(componentName) {\n        return defaultConfigRegistry.hasOwnProperty(componentName);\n    };\n\n    ko.components.unregister = function(componentName) {\n        delete defaultConfigRegistry[componentName];\n        ko.components.clearCachedDefinition(componentName);\n    };\n\n    ko.components.defaultLoader = {\n        'getConfig': function(componentName, callback) {\n            var result = defaultConfigRegistry.hasOwnProperty(componentName)\n                ? defaultConfigRegistry[componentName]\n                : null;\n            callback(result);\n        },\n\n        'loadComponent': function(componentName, config, callback) {\n            var errorCallback = makeErrorCallback(componentName);\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n            });\n        },\n\n        'loadTemplate': function(componentName, templateConfig, callback) {\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n        },\n\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n        }\n    };\n\n    var createViewModelKey = 'createViewModel';\n\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n    // into the standard component definition format:\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n    // so this is implemented manually below.\n    function resolveConfig(componentName, errorCallback, config, callback) {\n        var result = {},\n            makeCallBackWhenZero = 2,\n            tryIssueCallback = function() {\n                if (--makeCallBackWhenZero === 0) {\n                    callback(result);\n                }\n            },\n            templateConfig = config['template'],\n            viewModelConfig = config['viewModel'];\n\n        if (templateConfig) {\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n                    result['template'] = resolvedTemplate;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n\n        if (viewModelConfig) {\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n                    result[createViewModelKey] = resolvedViewModel;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n    }\n\n    function resolveTemplate(errorCallback, templateConfig, callback) {\n        if (typeof templateConfig === 'string') {\n            // Markup - parse it\n            callback(ko.utils.parseHtmlFragment(templateConfig));\n        } else if (templateConfig instanceof Array) {\n            // Assume already an array of DOM nodes - pass through unchanged\n            callback(templateConfig);\n        } else if (isDocumentFragment(templateConfig)) {\n            // Document fragment - use its child nodes\n            callback(ko.utils.makeArray(templateConfig.childNodes));\n        } else if (templateConfig['element']) {\n            var element = templateConfig['element'];\n            if (isDomElement(element)) {\n                // Element instance - copy its child nodes\n                callback(cloneNodesFromTemplateSourceElement(element));\n            } else if (typeof element === 'string') {\n                // Element ID - find it, then copy its child nodes\n                var elemInstance = document.getElementById(element);\n                if (elemInstance) {\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n                } else {\n                    errorCallback('Cannot find element with ID ' + element);\n                }\n            } else {\n                errorCallback('Unknown element type: ' + element);\n            }\n        } else {\n            errorCallback('Unknown template value: ' + templateConfig);\n        }\n    }\n\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n        if (typeof viewModelConfig === 'function') {\n            // Constructor - convert to standard factory function format\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n            // be used in factory functions, not viewmodel constructors.\n            callback(function (params /*, componentInfo */) {\n                return new viewModelConfig(params);\n            });\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n            // Already a factory function - use it as-is\n            callback(viewModelConfig[createViewModelKey]);\n        } else if ('instance' in viewModelConfig) {\n            // Fixed object instance - promote to createViewModel format for API consistency\n            var fixedInstance = viewModelConfig['instance'];\n            callback(function (params, componentInfo) {\n                return fixedInstance;\n            });\n        } else if ('viewModel' in viewModelConfig) {\n            // Resolved AMD module whose value is of the form { viewModel: ... }\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n        } else {\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n        }\n    }\n\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\n        switch (ko.utils.tagNameLower(elemInstance)) {\n            case 'script':\n                return ko.utils.parseHtmlFragment(elemInstance.text);\n            case 'textarea':\n                return ko.utils.parseHtmlFragment(elemInstance.value);\n            case 'template':\n                // For browsers with proper <template> element support (i.e., where the .content property\n                // gives a document fragment), use that document fragment.\n                if (isDocumentFragment(elemInstance.content)) {\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n                }\n        }\n\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n        // understand <template> and just treat it as a regular container\n        return ko.utils.cloneNodes(elemInstance.childNodes);\n    }\n\n    function isDomElement(obj) {\n        if (window['HTMLElement']) {\n            return obj instanceof HTMLElement;\n        } else {\n            return obj && obj.tagName && obj.nodeType === 1;\n        }\n    }\n\n    function isDocumentFragment(obj) {\n        if (window['DocumentFragment']) {\n            return obj instanceof DocumentFragment;\n        } else {\n            return obj && obj.nodeType === 11;\n        }\n    }\n\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n        if (typeof config['require'] === 'string') {\n            // The config is the value of an AMD module\n            if (amdRequire || window['require']) {\n                (amdRequire || window['require'])([config['require']], callback);\n            } else {\n                errorCallback('Uses require, but no AMD loader is present');\n            }\n        } else {\n            callback(config);\n        }\n    }\n\n    function makeErrorCallback(componentName) {\n        return function (message) {\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\n        };\n    }\n\n    ko.exportSymbol('components.register', ko.components.register);\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n    ko.exportSymbol('components.unregister', ko.components.unregister);\n\n    // Expose the default loader so that developers can directly ask it for configuration\n    // or to resolve configuration\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\n    // By default, the default loader is the only registered component loader\n    ko.components['loaders'].push(ko.components.defaultLoader);\n\n    // Privately expose the underlying config registry for use in old-IE shim\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\n})();\n(function (undefined) {\n    // Overridable API for determining which component name applies to a given node. By overriding this,\n    // you can for example map specific tagNames to components that are not preregistered.\n    ko.components['getComponentNameForNode'] = function(node) {\n        var tagNameLower = ko.utils.tagNameLower(node);\n        if (ko.components.isRegistered(tagNameLower)) {\n            // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\n            if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\n                return tagNameLower;\n            }\n        }\n    };\n\n    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\n        // Determine if it's really a custom element matching a component\n        if (node.nodeType === 1) {\n            var componentName = ko.components['getComponentNameForNode'](node);\n            if (componentName) {\n                // It does represent a component, so add a component binding for it\n                allBindings = allBindings || {};\n\n                if (allBindings['component']) {\n                    // Avoid silently overwriting some other 'component' binding that may already be on the element\n                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n                }\n\n                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\n\n                allBindings['component'] = valueAccessors\n                    ? function() { return componentBindingValue; }\n                    : componentBindingValue;\n            }\n        }\n\n        return allBindings;\n    }\n\n    var nativeBindingProviderInstance = new ko.bindingProvider();\n\n    function getComponentParamsFromCustomElement(elem, bindingContext) {\n        var paramsAttribute = elem.getAttribute('params');\n\n        if (paramsAttribute) {\n            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\n                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\n                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\n                }),\n                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\n                    var paramValue = paramValueComputed.peek();\n                    // Does the evaluation of the parameter value unwrap any observables?\n                    if (!paramValueComputed.isActive()) {\n                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n                        return paramValue;\n                    } else {\n                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n                        // level of observability, and any inner (resulting model value) level of observability.\n                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n                        // writable observable, the computed will also be writable and pass the value on to the observable.\n                        return ko.computed({\n                            'read': function() {\n                                return ko.utils.unwrapObservable(paramValueComputed());\n                            },\n                            'write': ko.isWriteableObservable(paramValue) && function(value) {\n                                paramValueComputed()(value);\n                            },\n                            disposeWhenNodeIsRemoved: elem\n                        });\n                    }\n                });\n\n            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n            // This is in case the developer wants to react to outer (binding) observability separately from inner\n            // (model value) observability, or in case the model value observable has subobservables.\n            if (!result.hasOwnProperty('$raw')) {\n                result['$raw'] = rawParamComputedValues;\n            }\n\n            return result;\n        } else {\n            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n            // any empty one. Otherwise component viewmodels need special code to check whether or not\n            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n            return { '$raw': {} };\n        }\n    }\n\n    // --------------------------------------------------------------------------------\n    // Compatibility code for older (pre-HTML5) IE browsers\n\n    if (ko.utils.ieVersion < 9) {\n        // Whenever you preregister a component, enable it as a custom element in the current document\n        ko.components['register'] = (function(originalFunction) {\n            return function(componentName) {\n                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\n                return originalFunction.apply(this, arguments);\n            }\n        })(ko.components['register']);\n\n        // Whenever you create a document fragment, enable all preregistered component names as custom elements\n        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\n        document.createDocumentFragment = (function(originalFunction) {\n            return function() {\n                var newDocFrag = originalFunction(),\n                    allComponents = ko.components._allRegisteredComponents;\n                for (var componentName in allComponents) {\n                    if (allComponents.hasOwnProperty(componentName)) {\n                        newDocFrag.createElement(componentName);\n                    }\n                }\n                return newDocFrag;\n            };\n        })(document.createDocumentFragment);\n    }\n})();(function(undefined) {\n\n    var componentLoadingOperationUniqueId = 0;\n\n    ko.bindingHandlers['component'] = {\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n            var currentViewModel,\n                currentLoadingOperationId,\n                disposeAssociatedComponentViewModel = function () {\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n                    if (typeof currentViewModelDispose === 'function') {\n                        currentViewModelDispose.call(currentViewModel);\n                    }\n                    currentViewModel = null;\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n                    currentLoadingOperationId = null;\n                },\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\n            ko.computed(function () {\n                var value = ko.utils.unwrapObservable(valueAccessor()),\n                    componentName, componentParams;\n\n                if (typeof value === 'string') {\n                    componentName = value;\n                } else {\n                    componentName = ko.utils.unwrapObservable(value['name']);\n                    componentParams = ko.utils.unwrapObservable(value['params']);\n                }\n\n                if (!componentName) {\n                    throw new Error('No component name specified');\n                }\n\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n                ko.components.get(componentName, function(componentDefinition) {\n                    // If this is not the current load operation for this element, ignore it.\n                    if (currentLoadingOperationId !== loadingOperationId) {\n                        return;\n                    }\n\n                    // Clean up previous state\n                    disposeAssociatedComponentViewModel();\n\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n                    if (!componentDefinition) {\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\n                    }\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n                    var componentViewModel = createViewModel(componentDefinition, element, originalChildNodes, componentParams),\n                        childBindingContext = bindingContext['createChildContext'](componentViewModel, /* dataItemAlias */ undefined, function(ctx) {\n                            ctx['$component'] = componentViewModel;\n                            ctx['$componentTemplateNodes'] = originalChildNodes;\n                        });\n                    currentViewModel = componentViewModel;\n                    ko.applyBindingsToDescendants(childBindingContext, element);\n                });\n            }, null, { disposeWhenNodeIsRemoved: element });\n\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n\n    ko.virtualElements.allowedBindings['component'] = true;\n\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n        var template = componentDefinition['template'];\n        if (!template) {\n            throw new Error('Component \\'' + componentName + '\\' has no template');\n        }\n\n        var clonedNodesArray = ko.utils.cloneNodes(template);\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n    }\n\n    function createViewModel(componentDefinition, element, originalChildNodes, componentParams) {\n        var componentViewModelFactory = componentDefinition['createViewModel'];\n        return componentViewModelFactory\n            ? componentViewModelFactory.call(componentDefinition, componentParams, { 'element': element, 'templateNodes': originalChildNodes })\n            : componentParams; // Template-only component\n    }\n\n})();\nvar attrHtmlToJavascriptMap = { 'class': 'className', 'for': 'htmlFor' };\nko.bindingHandlers['attr'] = {\n    'update': function(element, valueAccessor, allBindings) {\n        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\n        ko.utils.objectForEach(value, function(attrName, attrValue) {\n            attrValue = ko.utils.unwrapObservable(attrValue);\n\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n            if (toRemove)\n                element.removeAttribute(attrName);\n\n            // In IE <= 7 and IE8 Quirks Mode, you have to use the Javascript property name instead of the\n            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\n            // but instead of figuring out the mode, we'll just set the attribute through the Javascript\n            // property for IE <= 8.\n            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavascriptMap) {\n                attrName = attrHtmlToJavascriptMap[attrName];\n                if (toRemove)\n                    element.removeAttribute(attrName);\n                else\n                    element[attrName] = attrValue;\n            } else if (!toRemove) {\n                element.setAttribute(attrName, attrValue.toString());\n            }\n\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n            // entirely, and there's no strong reason to allow for such casing in HTML.\n            if (attrName === \"name\") {\n                ko.utils.setElementName(element, toRemove ? \"\" : attrValue.toString());\n            }\n        });\n    }\n};\n(function() {\n\nko.bindingHandlers['checked'] = {\n    'after': ['value', 'attr'],\n    'init': function (element, valueAccessor, allBindings) {\n        var checkedValue = ko.pureComputed(function() {\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n            if (allBindings['has']('checkedValue')) {\n                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n            } else if (allBindings['has']('value')) {\n                return ko.utils.unwrapObservable(allBindings.get('value'));\n            }\n\n            return element.value;\n        });\n\n        function updateModel() {\n            // This updates the model value from the view value.\n            // It runs in response to DOM events (click) and changes in checkedValue.\n            var isChecked = element.checked,\n                elemValue = useCheckedValue ? checkedValue() : isChecked;\n\n            // When we're first setting up this computed, don't change any model state.\n            if (ko.computedContext.isInitial()) {\n                return;\n            }\n\n            // We can ignore unchecked radio buttons, because some other radio\n            // button will be getting checked, and that one can take care of updating state.\n            if (isRadio && !isChecked) {\n                return;\n            }\n\n            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\n            if (valueIsArray) {\n                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue;\n                if (oldElemValue !== elemValue) {\n                    // When we're responding to the checkedValue changing, and the element is\n                    // currently checked, replace the old elem value with the new elem value\n                    // in the model array.\n                    if (isChecked) {\n                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\n                        ko.utils.addOrRemoveItem(writableValue, oldElemValue, false);\n                    }\n\n                    oldElemValue = elemValue;\n                } else {\n                    // When we're responding to the user having checked/unchecked a checkbox,\n                    // add/remove the element value to the model array.\n                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\n                }\n                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\n                    modelValue(writableValue);\n                }\n            } else {\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n            }\n        };\n\n        function updateView() {\n            // This updates the view value from the model value.\n            // It runs in response to changes in the bound (checked) value.\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (valueIsArray) {\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\n                element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\n            } else if (isCheckbox) {\n                // When a checkbox is bound to any other value (not an array), being checked represents the value being trueish\n                element.checked = modelValue;\n            } else {\n                // For radio buttons, being checked means that the radio button's value corresponds to the model value\n                element.checked = (checkedValue() === modelValue);\n            }\n        };\n\n        var isCheckbox = element.type == \"checkbox\",\n            isRadio = element.type == \"radio\";\n\n        // Only bind to check boxes and radio buttons\n        if (!isCheckbox && !isRadio) {\n            return;\n        }\n\n        var rawValue = valueAccessor(),\n            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\n            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\n            oldElemValue = valueIsArray ? checkedValue() : undefined,\n            useCheckedValue = isRadio || valueIsArray;\n\n        // IE 6 won't allow radio buttons to be selected unless they have a name\n        if (isRadio && !element.name)\n            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\n\n        // Set up two computeds to update the binding:\n\n        // The first responds to changes in the checkedValue value and to element clicks\n        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\n        ko.utils.registerEventHandler(element, \"click\", updateModel);\n\n        // The second responds to changes in the model value (the one associated with the checked binding)\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\n        rawValue = undefined;\n    }\n};\nko.expressionRewriting.twoWayBindings['checked'] = true;\n\nko.bindingHandlers['checkedValue'] = {\n    'update': function (element, valueAccessor) {\n        element.value = ko.utils.unwrapObservable(valueAccessor());\n    }\n};\n\n})();var classesWrittenByBindingKey = '__ko__cssValue';\nko.bindingHandlers['css'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value !== null && typeof value == \"object\") {\n            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\n                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\n                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\n            });\n        } else {\n            value = ko.utils.stringTrim(String(value || '')); // Make sure we don't try to store or set a non-string value\n            ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\n            element[classesWrittenByBindingKey] = value;\n            ko.utils.toggleDomNodeCssClass(element, value, true);\n        }\n    }\n};\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            element.removeAttribute(\"disabled\");\n        else if ((!value) && (!element.disabled))\n            element.disabled = true;\n    }\n};\n\nko.bindingHandlers['disable'] = {\n    'update': function (element, valueAccessor) {\n        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n    }\n};\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n// e.g. click:handler instead of the usual full-length event:{click:handler}\nfunction makeEventHandlerShortcut(eventName) {\n    ko.bindingHandlers[eventName] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var newValueAccessor = function () {\n                var result = {};\n                result[eventName] = valueAccessor();\n                return result;\n            };\n            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\n        }\n    }\n}\n\nko.bindingHandlers['event'] = {\n    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var eventsToHandle = valueAccessor() || {};\n        ko.utils.objectForEach(eventsToHandle, function(eventName) {\n            if (typeof eventName == \"string\") {\n                ko.utils.registerEventHandler(element, eventName, function (event) {\n                    var handlerReturnValue;\n                    var handlerFunction = valueAccessor()[eventName];\n                    if (!handlerFunction)\n                        return;\n\n                    try {\n                        // Take all the event args, and prefix with the viewmodel\n                        var argsForHandler = ko.utils.makeArray(arguments);\n                        viewModel = bindingContext['$data'];\n                        argsForHandler.unshift(viewModel);\n                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\n                    } finally {\n                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                            if (event.preventDefault)\n                                event.preventDefault();\n                            else\n                                event.returnValue = false;\n                        }\n                    }\n\n                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\n                    if (!bubble) {\n                        event.cancelBubble = true;\n                        if (event.stopPropagation)\n                            event.stopPropagation();\n                    }\n                });\n            }\n        });\n    }\n};\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\nko.bindingHandlers['foreach'] = {\n    makeTemplateValueAccessor: function(valueAccessor) {\n        return function() {\n            var modelValue = valueAccessor(),\n                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\n            // If unwrappedValue is the array, pass in the wrapped value on its own\n            // The value will be unwrapped and tracked within the template binding\n            // (See https://github.com/SteveSanderson/knockout/issues/523)\n            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\n                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\n\n            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n            ko.utils.unwrapObservable(modelValue);\n            return {\n                'foreach': unwrappedValue['data'],\n                'as': unwrappedValue['as'],\n                'includeDestroyed': unwrappedValue['includeDestroyed'],\n                'afterAdd': unwrappedValue['afterAdd'],\n                'beforeRemove': unwrappedValue['beforeRemove'],\n                'afterRender': unwrappedValue['afterRender'],\n                'beforeMove': unwrappedValue['beforeMove'],\n                'afterMove': unwrappedValue['afterMove'],\n                'templateEngine': ko.nativeTemplateEngine.instance\n            };\n        };\n    },\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\n    },\n    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n    }\n};\nko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\nko.virtualElements.allowedBindings['foreach'] = true;\nvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\nvar hasfocusLastValue = '__ko_hasfocusLastValue';\nko.bindingHandlers['hasfocus'] = {\n    'init': function(element, valueAccessor, allBindings) {\n        var handleElementFocusChange = function(isFocused) {\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n            // from calling 'blur()' on the element when it loses focus.\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n            element[hasfocusUpdatingProperty] = true;\n            var ownerDoc = element.ownerDocument;\n            if (\"activeElement\" in ownerDoc) {\n                var active;\n                try {\n                    active = ownerDoc.activeElement;\n                } catch(e) {\n                    // IE9 throws if you access activeElement during page load (see issue #703)\n                    active = ownerDoc.body;\n                }\n                isFocused = (active === element);\n            }\n            var modelValue = valueAccessor();\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n            element[hasfocusLastValue] = isFocused;\n            element[hasfocusUpdatingProperty] = false;\n        };\n        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\n        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\n\n        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\n        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\n        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n    },\n    'update': function(element, valueAccessor) {\n        var value = !!ko.utils.unwrapObservable(valueAccessor());\n\n        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\n            value ? element.focus() : element.blur();\n\n            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\n            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\n            // element was focused already.\n            if (!value && element[hasfocusLastValue]) {\n                element.ownerDocument.body.focus();\n            }\n\n            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\n        }\n    }\n};\nko.expressionRewriting.twoWayBindings['hasfocus'] = true;\n\nko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\nko.expressionRewriting.twoWayBindings['hasFocus'] = true;\nko.bindingHandlers['html'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        // setHtml will unwrap the value if needed\n        ko.utils.setHtml(element, valueAccessor());\n    }\n};\n// Makes a binding like with or if\nfunction makeWithIfBinding(bindingKey, isWith, isNot, makeContextCallback) {\n    ko.bindingHandlers[bindingKey] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var didDisplayOnLastUpdate,\n                savedNodes;\n            ko.computed(function() {\n                var dataValue = ko.utils.unwrapObservable(valueAccessor()),\n                    shouldDisplay = !isNot !== !dataValue, // equivalent to isNot ? !dataValue : !!dataValue\n                    isFirstRender = !savedNodes,\n                    needsRefresh = isFirstRender || isWith || (shouldDisplay !== didDisplayOnLastUpdate);\n\n                if (needsRefresh) {\n                    // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n                    if (isFirstRender && ko.computedContext.getDependenciesCount()) {\n                        savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\n                    }\n\n                    if (shouldDisplay) {\n                        if (!isFirstRender) {\n                            ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\n                        }\n                        ko.applyBindingsToDescendants(makeContextCallback ? makeContextCallback(bindingContext, dataValue) : bindingContext, element);\n                    } else {\n                        ko.virtualElements.emptyNode(element);\n                    }\n\n                    didDisplayOnLastUpdate = shouldDisplay;\n                }\n            }, null, { disposeWhenNodeIsRemoved: element });\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n    ko.virtualElements.allowedBindings[bindingKey] = true;\n}\n\n// Construct the actual binding handlers\nmakeWithIfBinding('if');\nmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\nmakeWithIfBinding('with', true /* isWith */, false /* isNot */,\n    function(bindingContext, dataValue) {\n        return bindingContext['createChildContext'](dataValue);\n    }\n);\nvar captionPlaceholder = {};\nko.bindingHandlers['options'] = {\n    'init': function(element) {\n        if (ko.utils.tagNameLower(element) !== \"select\")\n            throw new Error(\"options binding applies only to SELECT elements\");\n\n        // Remove all existing <option>s.\n        while (element.length > 0) {\n            element.remove(0);\n        }\n\n        // Ensures that the binding processor doesn't try to bind the options\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor, allBindings) {\n        function selectedOptions() {\n            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\n        }\n\n        var selectWasPreviouslyEmpty = element.length == 0,\n            multiple = element.multiple,\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n            arrayToDomNodeChildrenOptions = {},\n            captionValue,\n            filteredArray,\n            previousSelectedValues = [];\n\n        if (!valueAllowUnset) {\n            if (multiple) {\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n            } else if (element.selectedIndex >= 0) {\n                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\n            }\n        }\n\n        if (unwrappedArray) {\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // If caption is included, add it to the array\n            if (allBindings['has']('optionsCaption')) {\n                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n                // If caption value is null or undefined, don't show a caption\n                if (captionValue !== null && captionValue !== undefined) {\n                    filteredArray.unshift(captionPlaceholder);\n                }\n            }\n        } else {\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n        }\n\n        function applyToObject(object, predicate, defaultValue) {\n            var predicateType = typeof predicate;\n            if (predicateType == \"function\")    // Given a function; run it against the data value\n                return predicate(object);\n            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\n                return object[predicate];\n            else                                // Given no optionsText arg; use the data value itself\n                return defaultValue;\n        }\n\n        // The following functions can run at two different times:\n        // The first is when the whole array is being updated directly from this binding handler.\n        // The second is when an observable value for a specific array entry is updated.\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n        var itemUpdate = false;\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\n            if (oldOptions.length) {\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\n                itemUpdate = true;\n            }\n            var option = element.ownerDocument.createElement(\"option\");\n            if (arrayEntry === captionPlaceholder) {\n                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n                ko.selectExtensions.writeValue(option, undefined);\n            } else {\n                // Apply a value to the option element\n                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\n                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\n\n                // Apply some text to the option element\n                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\n                ko.utils.setTextContent(option, optionText);\n            }\n            return [option];\n        }\n\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n        arrayToDomNodeChildrenOptions['beforeRemove'] =\n            function (option) {\n                element.removeChild(option);\n            };\n\n        function setSelectionCallback(arrayEntry, newOptions) {\n            if (itemUpdate && valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                // There is no need to use dependencyDetection.ignore since setDomNodeChildrenFromArrayMapping does so already.\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else if (previousSelectedValues.length) {\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n                // That's why we first added them without selection. Now it's time to set the selection.\n                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\n                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\n\n                // If this option was changed from being selected during a single-item update, notify the change\n                if (itemUpdate && !isSelected) {\n                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                }\n            }\n        }\n\n        var callback = setSelectionCallback;\n        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\n            callback = function(arrayEntry, newOptions) {\n                setSelectionCallback(arrayEntry, newOptions);\n                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n            }\n        }\n\n        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\n        ko.dependencyDetection.ignore(function () {\n            if (valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n            } else {\n                // Determine if the selection has changed as a result of updating the options list\n                var selectionChanged;\n                if (multiple) {\n                    // For a multiple-select box, compare the new selection count to the previous one\n                    // But if nothing was selected before, the selection can't have changed\n                    selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n                } else {\n                    // For a single-select box, compare the current value to the previous value\n                    // But if nothing was selected before or nothing is selected now, just look for a change in selection\n                    selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n                        ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n                        : (previousSelectedValues.length || element.selectedIndex >= 0);\n                }\n\n                // Ensure consistency between model value and selected option.\n                // If the dropdown was changed so that selection is no longer the same,\n                // notify the value or selectedOptions binding.\n                if (selectionChanged) {\n                    ko.utils.triggerEvent(element, \"change\");\n                }\n            }\n        });\n\n        // Workaround for IE bug\n        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\n\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\n            element.scrollTop = previousScrollTop;\n    }\n};\nko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\nko.bindingHandlers['selectedOptions'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        ko.utils.registerEventHandler(element, \"change\", function () {\n            var value = valueAccessor(), valueToWrite = [];\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                if (node.selected)\n                    valueToWrite.push(ko.selectExtensions.readValue(node));\n            });\n            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n        });\n    },\n    'update': function (element, valueAccessor) {\n        if (ko.utils.tagNameLower(element) != \"select\")\n            throw new Error(\"values binding applies only to SELECT elements\");\n\n        var newValue = ko.utils.unwrapObservable(valueAccessor()),\n            previousScrollTop = element.scrollTop;\n\n        if (newValue && typeof newValue.length == \"number\") {\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\n                if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\n                    ko.utils.setOptionNodeSelectionState(node, isSelected);\n                }\n            });\n        }\n\n        element.scrollTop = previousScrollTop;\n    }\n};\nko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\nko.bindingHandlers['style'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor() || {});\n        ko.utils.objectForEach(value, function(styleName, styleValue) {\n            styleValue = ko.utils.unwrapObservable(styleValue);\n\n            if (styleValue === null || styleValue === undefined || styleValue === false) {\n                // Empty string removes the value, whereas null/undefined have no effect\n                styleValue = \"\";\n            }\n\n            element.style[styleName] = styleValue;\n        });\n    }\n};\nko.bindingHandlers['submit'] = {\n    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        if (typeof valueAccessor() != \"function\")\n            throw new Error(\"The value for a submit binding must be a function\");\n        ko.utils.registerEventHandler(element, \"submit\", function (event) {\n            var handlerReturnValue;\n            var value = valueAccessor();\n            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\n            finally {\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                    if (event.preventDefault)\n                        event.preventDefault();\n                    else\n                        event.returnValue = false;\n                }\n            }\n        });\n    }\n};\nko.bindingHandlers['text'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        ko.utils.setTextContent(element, valueAccessor());\n    }\n};\nko.virtualElements.allowedBindings['text'] = true;\n(function () {\n\nif (window && window.navigator) {\n    var parseVersion = function (matches) {\n        if (matches) {\n            return parseFloat(matches[1]);\n        }\n    };\n\n    // Detect various browser versions because some old versions don't fully support the 'input' event\n    var operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()),\n        userAgent = window.navigator.userAgent,\n        safariVersion = parseVersion(userAgent.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),\n        firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]*)/));\n}\n\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\n// But it does fire the 'selectionchange' event on many of those, presumably because the\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\n// fired at the document level only and doesn't directly indicate which element changed. We\n// set up just one event handler for the document and use 'activeElement' to determine which\n// element was changed.\nif (ko.utils.ieVersion < 10) {\n    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\n        selectionChangeHandlerName = ko.utils.domData.nextKey();\n    var selectionChangeHandler = function(event) {\n        var target = this.activeElement,\n            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\n        if (handler) {\n            handler(event);\n        }\n    };\n    var registerForSelectionChangeEvent = function (element, handler) {\n        var ownerDoc = element.ownerDocument;\n        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\n            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\n            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\n        }\n        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\n    };\n}\n\nko.bindingHandlers['textInput'] = {\n    'init': function (element, valueAccessor, allBindings) {\n\n        var previousElementValue = element.value,\n            timeoutHandle,\n            elementValueBeforeEvent;\n\n        var updateModel = function (event) {\n            clearTimeout(timeoutHandle);\n            elementValueBeforeEvent = timeoutHandle = undefined;\n\n            var elementValue = element.value;\n            if (previousElementValue !== elementValue) {\n                // Provide a way for tests to know exactly which event was processed\n                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\n                previousElementValue = elementValue;\n                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n            }\n        };\n\n        var deferUpdateModel = function (event) {\n            if (!timeoutHandle) {\n                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n                // event firing and the updateModel function running. This allows us to ignore model\n                // updates that are from the previous state of the element, usually due to techniques\n                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n                elementValueBeforeEvent = element.value;\n                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\n                timeoutHandle = ko.utils.setTimeout(handler, 4);\n            }\n        };\n\n        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\n        // so we'll make sure all updates are asynchronous\n        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel;\n\n        var updateView = function () {\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (modelValue === null || modelValue === undefined) {\n                modelValue = '';\n            }\n\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateView, 4);\n                return;\n            }\n\n            // Update the element only if the element and model are different. On some browsers, updating the value\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\n            if (element.value !== modelValue) {\n                previousElementValue = modelValue;  // Make sure we ignore events (propertychange) that result from updating the value\n                element.value = modelValue;\n            }\n        };\n\n        var onEvent = function (event, handler) {\n            ko.utils.registerEventHandler(element, event, handler);\n        };\n\n        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\n            // Provide a way for tests to specify exactly which events are bound\n            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\n                if (eventName.slice(0,5) == 'after') {\n                    onEvent(eventName.slice(5), deferUpdateModel);\n                } else {\n                    onEvent(eventName, updateModel);\n                }\n            });\n        } else {\n            if (ko.utils.ieVersion < 10) {\n                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\n                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\n                // but that's an acceptable compromise for this binding. IE 9 does support 'input', but since it doesn't fire it\n                // when using autocomplete, we'll use 'propertychange' for it also.\n                onEvent('propertychange', function(event) {\n                    if (event.propertyName === 'value') {\n                        ieUpdateModel(event);\n                    }\n                });\n\n                if (ko.utils.ieVersion == 8) {\n                    // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\n                    // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\n                    // events too.\n                    onEvent('keyup', updateModel);      // A single keystoke\n                    onEvent('keydown', updateModel);    // The first character when a key is held down\n                }\n                if (ko.utils.ieVersion >= 8) {\n                    // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\n                    // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\n                    // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\n                    // can detect all of those except dragging text out of the field, for which we use 'dragend'.\n                    // These are also needed in IE8 because of the bug described above.\n                    registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\n                    onEvent('dragend', deferUpdateModel);\n                }\n            } else {\n                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\n                // through the user interface.\n                onEvent('input', updateModel);\n\n                if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\n                    // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\n                    // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\n                    onEvent('keydown', deferUpdateModel);\n                    onEvent('paste', deferUpdateModel);\n                    onEvent('cut', deferUpdateModel);\n                } else if (operaVersion < 11) {\n                    // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\n                    // We can try to catch some of those using 'keydown'.\n                    onEvent('keydown', deferUpdateModel);\n                } else if (firefoxVersion < 4.0) {\n                    // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n                    onEvent('DOMAutoComplete', updateModel);\n\n                    // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\n                    onEvent('dragdrop', updateModel);       // <3.5\n                    onEvent('drop', updateModel);           // 3.5\n                }\n            }\n        }\n\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n        onEvent('change', updateModel);\n\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n    }\n};\nko.expressionRewriting.twoWayBindings['textInput'] = true;\n\n// textinput is an alias for textInput\nko.bindingHandlers['textinput'] = {\n    // preprocess is the only way to set up a full alias\n    'preprocess': function (value, name, addBinding) {\n        addBinding('textInput', value);\n    }\n};\n\n})();ko.bindingHandlers['uniqueName'] = {\n    'init': function (element, valueAccessor) {\n        if (valueAccessor()) {\n            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\n            ko.utils.setElementName(element, name);\n        }\n    }\n};\nko.bindingHandlers['uniqueName'].currentIndex = 0;\nko.bindingHandlers['value'] = {\n    'after': ['options', 'foreach'],\n    'init': function (element, valueAccessor, allBindings) {\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n        if (element.tagName.toLowerCase() == \"input\" && (element.type == \"checkbox\" || element.type == \"radio\")) {\n            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\n            return;\n        }\n\n        // Always catch \"change\" event; possibly other events too if asked\n        var eventsToCatch = [\"change\"];\n        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\n        var propertyChangedFired = false;\n        var elementValueBeforeEvent = null;\n\n        if (requestedEventsToCatch) {\n            if (typeof requestedEventsToCatch == \"string\") // Allow both individual event names, and arrays of event names\n                requestedEventsToCatch = [requestedEventsToCatch];\n            ko.utils.arrayPushAll(eventsToCatch, requestedEventsToCatch);\n            eventsToCatch = ko.utils.arrayGetDistinctValues(eventsToCatch);\n        }\n\n        var valueUpdateHandler = function() {\n            elementValueBeforeEvent = null;\n            propertyChangedFired = false;\n            var modelValue = valueAccessor();\n            var elementValue = ko.selectExtensions.readValue(element);\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n        }\n\n        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\n        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\n        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && element.tagName.toLowerCase() == \"input\" && element.type == \"text\"\n                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\n        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\n            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\n            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\n            ko.utils.registerEventHandler(element, \"blur\", function() {\n                if (propertyChangedFired) {\n                    valueUpdateHandler();\n                }\n            });\n        }\n\n        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\n            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\n            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\n            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\n            var handler = valueUpdateHandler;\n            if (ko.utils.stringStartsWith(eventName, \"after\")) {\n                handler = function() {\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n                    // techniques like rateLimit can trigger model changes at critical moments that will\n                    // override the user's inputs, causing keystrokes to be lost.\n                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\n                    ko.utils.setTimeout(valueUpdateHandler, 0);\n                };\n                eventName = eventName.substring(\"after\".length);\n            }\n            ko.utils.registerEventHandler(element, eventName, handler);\n        });\n\n        var updateFromModel = function () {\n            var newValue = ko.utils.unwrapObservable(valueAccessor());\n            var elementValue = ko.selectExtensions.readValue(element);\n\n            if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateFromModel, 0);\n                return;\n            }\n\n            var valueHasChanged = (newValue !== elementValue);\n\n            if (valueHasChanged) {\n                if (ko.utils.tagNameLower(element) === \"select\") {\n                    var allowUnset = allBindings.get('valueAllowUnset');\n                    var applyValueAction = function () {\n                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\n                    };\n                    applyValueAction();\n\n                    if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\n                        // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n                        // because you're not allowed to have a model value that disagrees with a visible UI selection.\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                    } else {\n                        // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\n                        // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\n                        // to apply the value as well.\n                        ko.utils.setTimeout(applyValueAction, 0);\n                    }\n                } else {\n                    ko.selectExtensions.writeValue(element, newValue);\n                }\n            }\n        };\n\n        ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n    },\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\n};\nko.expressionRewriting.twoWayBindings['value'] = true;\nko.bindingHandlers['visible'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        var isCurrentlyVisible = !(element.style.display == \"none\");\n        if (value && !isCurrentlyVisible)\n            element.style.display = \"\";\n        else if ((!value) && isCurrentlyVisible)\n            element.style.display = \"none\";\n    }\n};\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\nmakeEventHandlerShortcut('click');\n// If you want to make a custom template engine,\n//\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\n//\n//        function (templateSource, bindingContext, options) {\n//            // - templateSource.text() is the text of the template you should render\n//            // - bindingContext.$data is the data you should pass into the template\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n//            //     and bindingContext.$root available in the template too\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n//            // - templateDocument is the document object of the template\n//            //\n//            // Return value: an array of DOM nodes\n//        }\n//\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n//\n//        function (script) {\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n//        }\n//\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\nko.templateEngine = function () { };\n\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    throw new Error(\"Override renderTemplateSource\");\n};\n\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n};\n\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n    // Named template\n    if (typeof template == \"string\") {\n        templateDocument = templateDocument || document;\n        var elem = templateDocument.getElementById(template);\n        if (!elem)\n            throw new Error(\"Cannot find template with ID \" + template);\n        return new ko.templateSources.domElement(elem);\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n        // Anonymous template\n        return new ko.templateSources.anonymousTemplate(template);\n    } else\n        throw new Error(\"Unknown template type: \" + template);\n};\n\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n};\n\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n    // Skip rewriting if requested\n    if (this['allowTemplateRewriting'] === false)\n        return true;\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n};\n\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    var rewritten = rewriterCallback(templateSource['text']());\n    templateSource['text'](rewritten);\n    templateSource['data'](\"isRewritten\", true);\n};\n\nko.exportSymbol('templateEngine', ko.templateEngine);\n\nko.templateRewriting = (function () {\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\n    function validateDataBindValuesForRewriting(keyValueArray) {\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n        for (var i = 0; i < keyValueArray.length; i++) {\n            var key = keyValueArray[i]['key'];\n            if (allValidators.hasOwnProperty(key)) {\n                var validator = allValidators[key];\n\n                if (typeof validator === \"function\") {\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n                    if (possibleErrorMessage)\n                        throw new Error(possibleErrorMessage);\n                } else if (!validator) {\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n                }\n            }\n        }\n    }\n\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n        // extra indirection.\n        var applyBindingsToNextSiblingScript =\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n    }\n\n    return {\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n                }, templateDocument);\n        },\n\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n            });\n        },\n\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n            return ko.memoization.memoize(function (domNode, bindingContext) {\n                var nodeToBind = domNode.nextSibling;\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n                }\n            });\n        }\n    }\n})();\n\n\n// Exported only because it has to be referenced by string lookup from within rewritten template\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n(function() {\n    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n    //\n    // Two are provided by default:\n    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n    //                                           without reading/writing the actual element text content, since it will be overwritten\n    //                                           with the rendered template output.\n    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n    // Template sources need to have the following functions:\n    //   text() \t\t\t- returns the template text from your storage location\n    //   text(value)\t\t- writes the supplied template text to your storage location\n    //   data(key)\t\t\t- reads values stored using data(key, value) - see below\n    //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n    //\n    // Optionally, template sources can also have the following functions:\n    //   nodes()            - returns a DOM element containing the nodes of this template, where available\n    //   nodes(value)       - writes the given DOM element to your storage location\n    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n    //\n    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\n    ko.templateSources = {};\n\n    // ---- ko.templateSources.domElement -----\n\n    // template types\n    var templateScript = 1,\n        templateTextArea = 2,\n        templateTemplate = 3,\n        templateElement = 4;\n\n    ko.templateSources.domElement = function(element) {\n        this.domElement = element;\n\n        if (element) {\n            var tagNameLower = ko.utils.tagNameLower(element);\n            this.templateType =\n                tagNameLower === \"script\" ? templateScript :\n                tagNameLower === \"textarea\" ? templateTextArea :\n                    // For browsers with proper <template> element support, where the .content property gives a document fragment\n                tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\n                templateElement;\n        }\n    }\n\n    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\n        var elemContentsProperty = this.templateType === templateScript ? \"text\"\n                                 : this.templateType === templateTextArea ? \"value\"\n                                 : \"innerHTML\";\n\n        if (arguments.length == 0) {\n            return this.domElement[elemContentsProperty];\n        } else {\n            var valueToWrite = arguments[0];\n            if (elemContentsProperty === \"innerHTML\")\n                ko.utils.setHtml(this.domElement, valueToWrite);\n            else\n                this.domElement[elemContentsProperty] = valueToWrite;\n        }\n    };\n\n    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\n    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\n        if (arguments.length === 1) {\n            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\n        } else {\n            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\n        }\n    };\n\n    var templatesDomDataKey = ko.utils.domData.nextKey();\n    function getTemplateDomData(element) {\n        return ko.utils.domData.get(element, templatesDomDataKey) || {};\n    }\n    function setTemplateDomData(element, data) {\n        ko.utils.domData.set(element, templatesDomDataKey, data);\n    }\n\n    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\n        var element = this.domElement;\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(element),\n                containerData = templateData.containerData;\n            return containerData || (\n                this.templateType === templateTemplate ? element.content :\n                this.templateType === templateElement ? element :\n                undefined);\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(element, {containerData: valueToWrite});\n        }\n    };\n\n    // ---- ko.templateSources.anonymousTemplate -----\n    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\n    ko.templateSources.anonymousTemplate = function(element) {\n        this.domElement = element;\n    }\n    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\n    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\n    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(this.domElement);\n            if (templateData.textData === undefined && templateData.containerData)\n                templateData.textData = templateData.containerData.innerHTML;\n            return templateData.textData;\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(this.domElement, {textData: valueToWrite});\n        }\n    };\n\n    ko.exportSymbol('templateSources', ko.templateSources);\n    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\n    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\n})();\n(function () {\n    var _templateEngine;\n    ko.setTemplateEngine = function (templateEngine) {\n        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\n            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\n        _templateEngine = templateEngine;\n    }\n\n    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\n        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\n        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n            nextInQueue = ko.virtualElements.nextSibling(node);\n            action(node, nextInQueue);\n        }\n    }\n\n    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\n        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\n        if (continuousNodeArray.length) {\n            var firstNode = continuousNodeArray[0],\n                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n                parentNode = firstNode.parentNode,\n                provider = ko.bindingProvider['instance'],\n                preprocessNode = provider['preprocessNode'];\n\n            if (preprocessNode) {\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\n                    var nodePreviousSibling = node.previousSibling;\n                    var newNodes = preprocessNode.call(provider, node);\n                    if (newNodes) {\n                        if (node === firstNode)\n                            firstNode = newNodes[0] || nextNodeInRange;\n                        if (node === lastNode)\n                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n                    }\n                });\n\n                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n                // first node needs to be in the array).\n                continuousNodeArray.length = 0;\n                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n                    return;\n                }\n                if (firstNode === lastNode) {\n                    continuousNodeArray.push(firstNode);\n                } else {\n                    continuousNodeArray.push(firstNode, lastNode);\n                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n                }\n            }\n\n            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n            // whereas a regular applyBindings won't introduce new memoized nodes\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.applyBindings(bindingContext, node);\n            });\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\n            });\n\n            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n        }\n    }\n\n    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\n        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\n                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\n                                        : null;\n    }\n\n    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\n        options = options || {};\n        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\n        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\n        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\n\n        // Loosely check result is an array of DOM nodes\n        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\n            throw new Error(\"Template engine must return an array of DOM nodes\");\n\n        var haveAddedNodesToParent = false;\n        switch (renderMode) {\n            case \"replaceChildren\":\n                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"replaceNode\":\n                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"ignoreTargetNode\": break;\n            default:\n                throw new Error(\"Unknown renderMode: \" + renderMode);\n        }\n\n        if (haveAddedNodesToParent) {\n            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n            if (options['afterRender'])\n                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext['$data']]);\n        }\n\n        return renderedNodesArray;\n    }\n\n    function resolveTemplateName(template, data, context) {\n        // The template can be specified as:\n        if (ko.isObservable(template)) {\n            // 1. An observable, with string value\n            return template();\n        } else if (typeof template === 'function') {\n            // 2. A function of (data, context) returning a string\n            return template(data, context);\n        } else {\n            // 3. A string\n            return template;\n        }\n    }\n\n    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\n        options = options || {};\n        if ((options['templateEngine'] || _templateEngine) == undefined)\n            throw new Error(\"Set a template engine before calling renderTemplate\");\n        renderMode = renderMode || \"replaceChildren\";\n\n        if (targetNodeOrNodeArray) {\n            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\n            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\n            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\n\n            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\n                function () {\n                    // Ensure we've got a proper binding context to work with\n                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\n                        ? dataOrBindingContext\n                        : new ko.bindingContext(ko.utils.unwrapObservable(dataOrBindingContext));\n\n                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\n                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\n                    if (renderMode == \"replaceNode\") {\n                        targetNodeOrNodeArray = renderedNodesArray;\n                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n                    }\n                },\n                null,\n                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\n            );\n        } else {\n            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n            return ko.memoization.memoize(function (domNode) {\n                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\n            });\n        }\n    };\n\n    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\n        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n        var arrayItemContext;\n\n        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n        var executeTemplateForArrayItem = function (arrayValue, index) {\n            // Support selecting template as a function of the data being rendered\n            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, options['as'], function(context) {\n                context['$index'] = index;\n            });\n\n            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\n            return executeTemplate(null, \"ignoreTargetNode\", templateName, arrayItemContext, options);\n        }\n\n        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\n            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n            if (options['afterRender'])\n                options['afterRender'](addedNodesArray, arrayValue);\n\n            // release the \"cache\" variable, so that it can be collected by\n            // the GC when its value isn't used from within the bindings anymore.\n            arrayItemContext = null;\n        };\n\n        return ko.dependentObservable(function () {\n            var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            var filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return options['includeDestroyed'] || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, filteredArray, executeTemplateForArrayItem, options, activateBindingsCallback]);\n\n        }, null, { disposeWhenNodeIsRemoved: targetNode });\n    };\n\n    var templateComputedDomDataKey = ko.utils.domData.nextKey();\n    function disposeOldComputedAndStoreNewOne(element, newComputed) {\n        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\n        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\n            oldComputed.dispose();\n        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && newComputed.isActive()) ? newComputed : undefined);\n    }\n\n    ko.bindingHandlers['template'] = {\n        'init': function(element, valueAccessor) {\n            // Support anonymous templates\n            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\n            if (typeof bindingValue == \"string\" || bindingValue['name']) {\n                // It's a named template - clear the element\n                ko.virtualElements.emptyNode(element);\n            } else if ('nodes' in bindingValue) {\n                // We've been given an array of DOM nodes. Save them as the template source.\n                // There is no known use case for the node array being an observable array (if the output\n                // varies, put that behavior *into* your template - that's what templates are for), and\n                // the implementation would be a mess, so assert that it's not observable.\n                var nodes = bindingValue['nodes'] || [];\n                if (ko.isObservable(nodes)) {\n                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n                }\n                var container = ko.utils.moveCleanedNodesToContainerElement(nodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            } else {\n                // It's an anonymous template - store the element contents, then clear the element\n                var templateNodes = ko.virtualElements.childNodes(element),\n                    container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            }\n            return { 'controlsDescendantBindings': true };\n        },\n        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var value = valueAccessor(),\n                dataValue,\n                options = ko.utils.unwrapObservable(value),\n                shouldDisplay = true,\n                templateComputed = null,\n                templateName;\n\n            if (typeof options == \"string\") {\n                templateName = value;\n                options = {};\n            } else {\n                templateName = options['name'];\n\n                // Support \"if\"/\"ifnot\" conditions\n                if ('if' in options)\n                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\n                if (shouldDisplay && 'ifnot' in options)\n                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\n\n                dataValue = ko.utils.unwrapObservable(options['data']);\n            }\n\n            if ('foreach' in options) {\n                // Render once for each data point (treating data set as empty if shouldDisplay==false)\n                var dataArray = (shouldDisplay && options['foreach']) || [];\n                templateComputed = ko.renderTemplateForEach(templateName || element, dataArray, options, element, bindingContext);\n            } else if (!shouldDisplay) {\n                ko.virtualElements.emptyNode(element);\n            } else {\n                // Render once for this single data point (or use the viewModel if no data was provided)\n                var innerBindingContext = ('data' in options) ?\n                    bindingContext['createChildContext'](dataValue, options['as']) :  // Given an explitit 'data' value, we create a child binding context for it\n                    bindingContext;                                                        // Given no explicit 'data' value, we retain the same binding context\n                templateComputed = ko.renderTemplate(templateName || element, innerBindingContext, options, element);\n            }\n\n            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n            disposeOldComputedAndStoreNewOne(element, templateComputed);\n        }\n    };\n\n    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\n    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\n        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\n\n        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\n            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n\n        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\n            return null; // Named templates can be rewritten, so return \"no error\"\n        return \"This template engine does not support anonymous templates nested within its templates\";\n    };\n\n    ko.virtualElements.allowedBindings['template'] = true;\n})();\n\nko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\nko.exportSymbol('renderTemplate', ko.renderTemplate);\n// Go through the items that have been added and deleted and try to find matches between them.\nko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\n    if (left.length && right.length) {\n        var failedCompares, l, r, leftItem, rightItem;\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n            for (r = 0; rightItem = right[r]; ++r) {\n                if (leftItem['value'] === rightItem['value']) {\n                    leftItem['moved'] = rightItem['index'];\n                    rightItem['moved'] = leftItem['index'];\n                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n                    break;\n                }\n            }\n            failedCompares += r;\n        }\n    }\n};\n\nko.utils.compareArrays = (function () {\n    var statusNotInOld = 'added', statusNotInNew = 'deleted';\n\n    // Simple calculation based on Levenshtein distance.\n    function compareArrays(oldArray, newArray, options) {\n        // For backward compatibility, if the third arg is actually a bool, interpret\n        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\n        oldArray = oldArray || [];\n        newArray = newArray || [];\n\n        if (oldArray.length < newArray.length)\n            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\n        else\n            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n    }\n\n    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n        var myMin = Math.min,\n            myMax = Math.max,\n            editDistanceMatrix = [],\n            smlIndex, smlIndexMax = smlArray.length,\n            bigIndex, bigIndexMax = bigArray.length,\n            compareRange = (bigIndexMax - smlIndexMax) || 1,\n            maxDistance = smlIndexMax + bigIndexMax + 1,\n            thisRow, lastRow,\n            bigIndexMaxForRow, bigIndexMinForRow;\n\n        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n            lastRow = thisRow;\n            editDistanceMatrix.push(thisRow = []);\n            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n            bigIndexMinForRow = myMax(0, smlIndex - 1);\n            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n                if (!bigIndex)\n                    thisRow[bigIndex] = smlIndex + 1;\n                else if (!smlIndex)  // Top row - transform empty array into new array via additions\n                    thisRow[bigIndex] = bigIndex + 1;\n                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\n                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n                else {\n                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n                }\n            }\n        }\n\n        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\n        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\n                notInSml.push(editScript[editScript.length] = {     // added\n                    'status': statusNotInSml,\n                    'value': bigArray[--bigIndex],\n                    'index': bigIndex });\n            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n                notInBig.push(editScript[editScript.length] = {     // deleted\n                    'status': statusNotInBig,\n                    'value': smlArray[--smlIndex],\n                    'index': smlIndex });\n            } else {\n                --bigIndex;\n                --smlIndex;\n                if (!options['sparse']) {\n                    editScript.push({\n                        'status': \"retained\",\n                        'value': bigArray[bigIndex] });\n                }\n            }\n        }\n\n        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n        // smlIndexMax keeps the time complexity of this algorithm linear.\n        ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\n        return editScript.reverse();\n    }\n\n    return compareArrays;\n})();\n\nko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\n(function () {\n    // Objective:\n    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n    //   previously mapped - retain those nodes, and just insert/delete other ones\n\n    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n    // You can use this, for example, to activate bindings on those nodes.\n\n    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\n        // Map this array value inside a dependentObservable so we re-map when any dependency changes\n        var mappedNodes = [];\n        var dependentObservable = ko.dependentObservable(function() {\n            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n            if (mappedNodes.length > 0) {\n                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\n                if (callbackAfterAddingNodes)\n                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n            }\n\n            // Replace the contents of the mappedNodes array, thereby updating the record\n            // of which nodes would be deleted if valueToMap was itself later removed\n            mappedNodes.length = 0;\n            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\n        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\n        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\n    }\n\n    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\n        deletedItemDummyValue = ko.utils.domData.nextKey();\n\n    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes) {\n        // Compare the provided array against the previous one\n        array = array || [];\n        options = options || {};\n        var isFirstExecution = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) === undefined;\n        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey) || [];\n        var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; });\n        var editScript = ko.utils.compareArrays(lastArray, array, options['dontLimitMoves']);\n\n        // Build the new mapping result\n        var newMappingResult = [];\n        var lastMappingResultIndex = 0;\n        var newMappingResultIndex = 0;\n\n        var nodesToDelete = [];\n        var itemsToProcess = [];\n        var itemsForBeforeRemoveCallbacks = [];\n        var itemsForMoveCallbacks = [];\n        var itemsForAfterAddCallbacks = [];\n        var mapData;\n\n        function itemMovedOrRetained(editScriptIndex, oldPosition) {\n            mapData = lastMappingResult[oldPosition];\n            if (newMappingResultIndex !== oldPosition)\n                itemsForMoveCallbacks[editScriptIndex] = mapData;\n            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n            mapData.indexObservable(newMappingResultIndex++);\n            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n            newMappingResult.push(mapData);\n            itemsToProcess.push(mapData);\n        }\n\n        function callCallback(callback, items) {\n            if (callback) {\n                for (var i = 0, n = items.length; i < n; i++) {\n                    if (items[i]) {\n                        ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\n                            callback(node, i, items[i].arrayEntry);\n                        });\n                    }\n                }\n            }\n        }\n\n        for (var i = 0, editScriptItem, movedIndex; editScriptItem = editScript[i]; i++) {\n            movedIndex = editScriptItem['moved'];\n            switch (editScriptItem['status']) {\n                case \"deleted\":\n                    if (movedIndex === undefined) {\n                        mapData = lastMappingResult[lastMappingResultIndex];\n\n                        // Stop tracking changes to the mapping for these nodes\n                        if (mapData.dependentObservable) {\n                            mapData.dependentObservable.dispose();\n                            mapData.dependentObservable = undefined;\n                        }\n\n                        // Queue these nodes for later removal\n                        if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\n                            if (options['beforeRemove']) {\n                                newMappingResult.push(mapData);\n                                itemsToProcess.push(mapData);\n                                if (mapData.arrayEntry === deletedItemDummyValue) {\n                                    mapData = null;\n                                } else {\n                                    itemsForBeforeRemoveCallbacks[i] = mapData;\n                                }\n                            }\n                            if (mapData) {\n                                nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\n                            }\n                        }\n                    }\n                    lastMappingResultIndex++;\n                    break;\n\n                case \"retained\":\n                    itemMovedOrRetained(i, lastMappingResultIndex++);\n                    break;\n\n                case \"added\":\n                    if (movedIndex !== undefined) {\n                        itemMovedOrRetained(i, movedIndex);\n                    } else {\n                        mapData = { arrayEntry: editScriptItem['value'], indexObservable: ko.observable(newMappingResultIndex++) };\n                        newMappingResult.push(mapData);\n                        itemsToProcess.push(mapData);\n                        if (!isFirstExecution)\n                            itemsForAfterAddCallbacks[i] = mapData;\n                    }\n                    break;\n            }\n        }\n\n        // Store a copy of the array items we just considered so we can difference it next time\n        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\n\n        // Call beforeMove first before any changes have been made to the DOM\n        callCallback(options['beforeMove'], itemsForMoveCallbacks);\n\n        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\n\n        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n        for (var i = 0, nextNode = ko.virtualElements.firstChild(domNode), lastNode, node; mapData = itemsToProcess[i]; i++) {\n            // Get nodes for newly added items\n            if (!mapData.mappedNodes)\n                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n\n            // Put nodes in the right place if they aren't there already\n            for (var j = 0; node = mapData.mappedNodes[j]; nextNode = node.nextSibling, lastNode = node, j++) {\n                if (node !== nextNode)\n                    ko.virtualElements.insertAfter(domNode, node, lastNode);\n            }\n\n            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n            if (!mapData.initialized && callbackAfterAddingNodes) {\n                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n                mapData.initialized = true;\n            }\n        }\n\n        // If there's a beforeRemove callback, call it after reordering.\n        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n        // Perhaps we'll make that change in the future if this scenario becomes more common.\n        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\n\n        // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\n        // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\n        // with an actual item in the array and appear as \"retained\" or \"moved\".\n        for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\n            if (itemsForBeforeRemoveCallbacks[i]) {\n                itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\n            }\n        }\n\n        // Finally call afterMove and afterAdd callbacks\n        callCallback(options['afterMove'], itemsForMoveCallbacks);\n        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\n    }\n})();\n\nko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\nko.nativeTemplateEngine = function () {\n    this['allowTemplateRewriting'] = false;\n}\n\nko.nativeTemplateEngine.prototype = new ko.templateEngine();\nko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\nko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\n        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\n        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\n\n    if (templateNodes) {\n        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\n    } else {\n        var templateText = templateSource['text']();\n        return ko.utils.parseHtmlFragment(templateText, templateDocument);\n    }\n};\n\nko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\nko.setTemplateEngine(ko.nativeTemplateEngine.instance);\n\nko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\n(function() {\n    ko.jqueryTmplTemplateEngine = function () {\n        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\n        // doesn't expose a version number, so we have to infer it.\n        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\n        // which KO internally refers to as version \"2\", so older versions are no longer detected.\n        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\n            if (!jQueryInstance || !(jQueryInstance['tmpl']))\n                return 0;\n            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\n            try {\n                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\n                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\n                    return 2; // Final version of jquery.tmpl\n                }\n            } catch(ex) { /* Apparently not the version we were looking for */ }\n\n            return 1; // Any older version that we don't support\n        })();\n\n        function ensureHasReferencedJQueryTemplates() {\n            if (jQueryTmplVersion < 2)\n                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\n        }\n\n        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\n            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\n        }\n\n        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\n            templateDocument = templateDocument || document;\n            options = options || {};\n            ensureHasReferencedJQueryTemplates();\n\n            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\n            var precompiled = templateSource['data']('precompiled');\n            if (!precompiled) {\n                var templateText = templateSource['text']() || \"\";\n                // Wrap in \"with($whatever.koBindingContext) { ... }\"\n                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\n\n                precompiled = jQueryInstance['template'](null, templateText);\n                templateSource['data']('precompiled', precompiled);\n            }\n\n            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\n            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\n\n            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\n            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\n\n            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\n            return resultNodes;\n        };\n\n        this['createJavaScriptEvaluatorBlock'] = function(script) {\n            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\n        };\n\n        this['addTemplate'] = function(templateName, templateMarkup) {\n            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\n        };\n\n        if (jQueryTmplVersion > 0) {\n            jQueryInstance['tmpl']['tag']['ko_code'] = {\n                open: \"__.push($1 || '');\"\n            };\n            jQueryInstance['tmpl']['tag']['ko_with'] = {\n                open: \"with($1) {\",\n                close: \"} \"\n            };\n        }\n    };\n\n    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\n    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\n\n    // Use this one by default *only if jquery.tmpl is referenced*\n    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\n    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\n        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\n\n    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\n})();\n}));\n}());\n})();\n\n","/**\n * @license text 2.0.15 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, http://github.com/requirejs/text/LICENSE\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = {},\n        masterConfig = (module.config && module.config()) || {};\n\n    function useDefault(value, defaultValue) {\n        return value === undefined || value === '' ? defaultValue : value;\n    }\n\n    //Allow for default ports for http and https.\n    function isSamePort(protocol1, port1, protocol2, port2) {\n        if (port1 === port2) {\n            return true;\n        } else if (protocol1 === protocol2) {\n            if (protocol1 === 'http') {\n                return useDefault(port1, '80') === useDefault(port2, '80');\n            } else if (protocol1 === 'https') {\n                return useDefault(port1, '443') === useDefault(port2, '443');\n            }\n        }\n        return false;\n    }\n\n    text = {\n        version: '2.0.15',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.lastIndexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || isSamePort(uProtocol, uPort, protocol, port));\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config && config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config && config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node &&\n            !process.versions['node-webkit'] &&\n            !process.versions['atom-shell'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file[0] === '\\uFEFF') {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                if (errback) {\n                    errback(e);\n                }\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status || 0;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        if (errback) {\n                            errback(err);\n                        }\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n            typeof Components !== 'undefined' && Components.classes &&\n            Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n                readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                           .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n\n","\ndefine('text!components/application-main/template.html',[],function () { return '<navigation-bar></navigation-bar>\\r\\n<side-bar></side-bar>\\r\\n<presentation-view></presentation-view>\\r\\n';});\n\n","/*\n * Copyright (c) 2013 nazomikan\n * https://github.com/nazomikan/PubsubJS\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n(function (name, global, definition) {\n  if (typeof module !== 'undefined') {\n    module.exports = definition();\n  } else if (typeof require !== 'undefined' && typeof require.amd === 'object') {\n    define('pubsub',definition);\n  } else {\n    global[name] = definition();\n  }\n})('Pubsub', this, function () {\n  var arrayProto = Array.prototype\n    , slice = arrayProto.slice\n    ;\n\n  function Context() {\n    this.subscribers = {};\n  }\n\n  Context.create = function createContext() {\n    var context = createObject(Context.prototype)\n      , args = slice.call(arguments)\n      ;\n\n    Context.apply(context, args);\n    return context;\n  };\n\n  Context.prototype.publish = function (/*eventName, context, args*/) {\n    var args = slice.call(arguments)\n      , eventName = args.shift()\n      , context = args.shift()\n      , subscribers = this.subscribers[eventName] || []\n      , params = [context].concat(args)\n      , i\n      , l\n      , c\n      ;\n\n    if (!checkContext(context)) {\n      throw new TypeError('publish: The second arguments must be pubsub#Context or Null');\n    }\n\n    for (i = 0, l = subscribers.length; i < l; i++) {\n      subscribers[i].apply(null, params);\n      // length may change by subscribeOnce.\n      l !== (c = subscribers.length) && (--i, l = c);\n    }\n  };\n\n  Context.prototype.subscribe = function (eventName, handler) {\n    this.subscribers[eventName] = this.subscribers[eventName] || [];\n    this.subscribers[eventName].push(handler);\n  };\n\n  Context.prototype.subscribeOnce = function (eventName, handler) {\n    var that = this\n      , func\n      ;\n\n    func = function () {\n      var args = slice.call(arguments);\n      handler.apply(null, args);\n      that.unsubscribe(eventName, func);\n    };\n\n    that.subscribe(eventName, func);\n  };\n\n  Context.prototype.unsubscribe = function (eventName, handler) {\n    var subscribers = this.subscribers\n      , targetSubscribers = subscribers[eventName] || []\n      , i\n      , iz\n      ;\n\n    if (!handler) {\n      delete subscribers[eventName];\n      return;\n    }\n\n    for (i = targetSubscribers.length - 1, iz = 0; i >= iz; i--) {\n      // fn.guid -> support jquery.proxy\n      if (targetSubscribers[i] === handler || (handler.guid && (targetSubscribers[i].guid === handler.guid))) {\n        targetSubscribers.splice(i, 1);\n      }\n    }\n  };\n\n  Context.prototype.dump = function (eventName) {\n    return eventName ? (this.subscribers[eventName] || []) : this.subscribers;\n  };\n\n  function Pubsub() {\n    this.Context = Context;\n    this.globalContext = Context.create();\n  }\n\n  Pubsub.create = function () {\n    var pubsub = createObject(Pubsub.prototype)\n      , args = slice.call(arguments)\n      ;\n\n    Pubsub.apply(pubsub, args);\n    return pubsub;\n  };\n\n  Pubsub.prototype.exports = function (space) {\n    var global = Function(\"return this\")();\n    space = space || \"pubsub\";\n    global[space] = this;\n    return this;\n  };\n\n  Pubsub.prototype.publish = function (/*eventName, context, args*/) {\n    var args = slice.call(arguments)\n      , eventName = args.shift()\n      , globalContext = this.globalContext\n      , context = args.shift()\n      , params = [eventName, context].concat(args)\n      ;\n\n    globalContext.publish.apply(globalContext, params);\n  };\n\n  Pubsub.prototype.subscribe = function (eventName, handler) {\n    var context = this.globalContext\n      ;\n    context.subscribe(eventName, handler);\n  };\n\n  Pubsub.prototype.subscribeOnce = function (eventName, handler) {\n    var context = this.globalContext\n      ;\n    context.subscribeOnce(eventName, handler);\n  };\n\n  Pubsub.prototype.unsubscribe = function (eventName, handler) {\n    var context = this.globalContext\n      ;\n    context.unsubscribe(eventName, handler);\n  };\n\n  Pubsub.prototype.dump = function (eventName) {\n    var context = this.globalContext\n      ;\n    return context.dump(eventName);\n  }\n\n  function createObject(obj) {\n    if (Object.create) {\n      return Object.create(obj);\n    }\n\n    if (arguments.length > 1) {\n      throw new Error('Object.create implementation only accepts the first parameter.');\n    }\n    function F() {}\n    F.prototype = obj;\n    return new F();\n  }\n\n  function checkContext(obj) {\n    if (!(obj instanceof Context) &&\n      !(obj instanceof Pubsub) &&\n      !(obj == null)) {\n      return false;\n    }\n    return true;\n  }\n\n  return Pubsub;\n});\n\n","define('services/signal',[\r\n    'pubsub'\r\n],\r\nfunction(PubSub) {\r\n    return PubSub.create();\r\n});\r\n\n","/*\n * css.normalize.js\n *\n * CSS Normalization\n *\n * CSS paths are normalized based on an optional basePath and the RequireJS config\n *\n * Usage:\n *   normalize(css, fromBasePath, toBasePath);\n *\n * css: the stylesheet content to normalize\n * fromBasePath: the absolute base path of the css relative to any root (but without ../ backtracking)\n * toBasePath: the absolute new base path of the css relative to the same root\n * \n * Absolute dependencies are left untouched.\n *\n * Urls in the CSS are picked up by regular expressions.\n * These will catch all statements of the form:\n *\n * url(*)\n * url('*')\n * url(\"*\")\n * \n * @import '*'\n * @import \"*\"\n *\n * (and so also @import url(*) variations)\n *\n * For urls needing normalization\n *\n */\n\ndefine('vendor/require-less/normalize',[],function() {\n  \n  // regular expression for removing double slashes\n  // eg http://www.example.com//my///url/here -> http://www.example.com/my/url/here\n  var slashes = /([^:])\\/+/g\n  var removeDoubleSlashes = function(uri) {\n    return uri.replace(slashes, '$1/');\n  }\n\n  // given a relative URI, and two absolute base URIs, convert it from one base to another\n  var protocolRegEx = /[^\\:\\/]*:\\/\\/([^\\/])*/;\n  var absUrlRegEx = /^(\\/|data:)/;\n  function convertURIBase(uri, fromBase, toBase) {\n    if (uri.match(absUrlRegEx) || uri.match(protocolRegEx))\n      return uri;\n    uri = removeDoubleSlashes(uri);\n    // if toBase specifies a protocol path, ensure this is the same protocol as fromBase, if not\n    // use absolute path at fromBase\n    var toBaseProtocol = toBase.match(protocolRegEx);\n    var fromBaseProtocol = fromBase.match(protocolRegEx);\n    if (fromBaseProtocol && (!toBaseProtocol || toBaseProtocol[1] != fromBaseProtocol[1] || toBaseProtocol[2] != fromBaseProtocol[2]))\n      return absoluteURI(uri, fromBase);\n    \n    else {\n      return relativeURI(absoluteURI(uri, fromBase), toBase);\n    }\n  };\n  \n  // given a relative URI, calculate the absolute URI\n  function absoluteURI(uri, base) {\n    if (uri.substr(0, 2) == './')\n      uri = uri.substr(2);\n\n    // absolute urls are left in tact\n    if (uri.match(absUrlRegEx) || uri.match(protocolRegEx))\n      return uri;\n    \n    var baseParts = base.split('/');\n    var uriParts = uri.split('/');\n    \n    baseParts.pop();\n    \n    while (curPart = uriParts.shift())\n      if (curPart == '..')\n        baseParts.pop();\n      else\n        baseParts.push(curPart);\n    \n    return baseParts.join('/');\n  };\n\n\n  // given an absolute URI, calculate the relative URI\n  function relativeURI(uri, base) {\n    \n    // reduce base and uri strings to just their difference string\n    var baseParts = base.split('/');\n    baseParts.pop();\n    base = baseParts.join('/') + '/';\n    i = 0;\n    while (base.substr(i, 1) == uri.substr(i, 1))\n      i++;\n    while (base.substr(i, 1) != '/')\n      i--;\n    base = base.substr(i + 1);\n    uri = uri.substr(i + 1);\n\n    // each base folder difference is thus a backtrack\n    baseParts = base.split('/');\n    var uriParts = uri.split('/');\n    out = '';\n    while (baseParts.shift())\n      out += '../';\n    \n    // finally add uri parts\n    while (curPart = uriParts.shift())\n      out += curPart + '/';\n    \n    return out.substr(0, out.length - 1);\n  };\n  \n  var normalizeCSS = function(source, fromBase, toBase) {\n\n    fromBase = removeDoubleSlashes(fromBase);\n    toBase = removeDoubleSlashes(toBase);\n\n    var urlRegEx = /@import\\s*(\"([^\"]*)\"|'([^']*)')|url\\s*\\(\\s*(\\s*\"([^\"]*)\"|'([^']*)'|[^\\)]*\\s*)\\s*\\)/ig;\n    var result, url, source;\n\n    while (result = urlRegEx.exec(source)) {\n      url = result[3] || result[2] || result[5] || result[6] || result[4];\n      var newUrl;\n      newUrl = convertURIBase(url, fromBase, toBase);\n      var quoteLen = result[5] || result[6] ? 1 : 0;\n      source = source.substr(0, urlRegEx.lastIndex - url.length - quoteLen - 1) + newUrl + source.substr(urlRegEx.lastIndex - quoteLen - 1);\n      urlRegEx.lastIndex = urlRegEx.lastIndex + (newUrl.length - url.length);\n    }\n    \n    return source;\n  };\n  \n  normalizeCSS.convertURIBase = convertURIBase;\n  normalizeCSS.absoluteURI = absoluteURI;\n  normalizeCSS.relativeURI = relativeURI;\n  \n  return normalizeCSS;\n});\n\n","define('vendor/require-less/less',['require'], function(require) {\n  \n  var lessAPI = {};\n  \n  lessAPI.pluginBuilder = './less-builder';\n  \n  if (typeof window == 'undefined') {\n    lessAPI.load = function(n, r, load) { load(); }\n    return lessAPI;\n  }\n  \n  lessAPI.normalize = function(name, normalize) {\n    if (name.substr(name.length - 5, 5) == '.less')\n      name = name.substr(0, name.length - 5);\n\n    name = normalize(name);\n\n    return name;\n  }\n  \n  var head = document.getElementsByTagName('head')[0];\n\n  var base = document.getElementsByTagName('base');\n  base = base && base[0] && base[0] && base[0].href;\n  var pagePath = (base || window.location.href.split('#')[0].split('?')[0]).split('/');\n  pagePath[pagePath.length - 1] = '';\n  pagePath = pagePath.join('/');\n\n  var styleCnt = 0;\n  var curStyle;\n  lessAPI.inject = function(css) {\n    if (styleCnt < 31) {\n      curStyle = document.createElement('style');\n      curStyle.type = 'text/css';\n      head.appendChild(curStyle);\n      styleCnt++;\n    }\n    if (curStyle.styleSheet)\n      curStyle.styleSheet.cssText += css;\n    else\n      curStyle.appendChild(document.createTextNode(css));\n  }\n\n  lessAPI.load = function(lessId, req, load, config) {\n    window.less = config.less || {};\n    window.less.env = 'development';\n\n    require(['./lessc', './normalize'], function(lessc, normalize) {\n\n      var fileUrl = req.toUrl(lessId + '.less');\n      fileUrl = normalize.absoluteURI(fileUrl, pagePath);\n\n      var parser = new lessc.Parser(window.less);\n\n      parser.parse('@import (multiple) \"' + fileUrl + '\";', function(err, tree) {\n        if (err)\n          return load.error(err);\n\n        lessAPI.inject(normalize(tree.toCSS(config.less), fileUrl, pagePath));\n\n        setTimeout(load, 7);\n      }, window.less);\n\n    });\n  }\n  \n  return lessAPI;\n});\n\n","\ndefine('vendor/require-less/less!components/application-main/style',[],function(){});\n","\ndefine('text!components/navigation-bar/template.html',[],function () { return '<div class=\"nav-left\">\\r\\n    <button type=\"button\" name=\"button\">Review</button>\\r\\n</div>\\r\\n\\r\\n<div class=\"nav-center\">\\r\\n    <h1>\\r\\n        Question <span data-bind=\"text: pageNumber\"></span> of <span data-bind=\"text: totalPages\"></span>\\r\\n    </h1>\\r\\n\\r\\n    <div>\\r\\n        You\\'ve answered\\r\\n        <span data-bind=\"text: totalAnswered\"></span> of\\r\\n        <span data-bind=\"text: totalQuestions\"></span>\\r\\n        questions.\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\"nav-right\">\\r\\n    <button data-bind=\"click: goToPrev\">\\r\\n        <\\r\\n    </button>\\r\\n\\r\\n    <button data-bind=\"click: goToNext\">\\r\\n        >\\r\\n    </button>\\r\\n</div>\\r\\n';});\n\n","define('services/page-manager',['pubsub'], function(pubsub) {\r\n    var PageEvents = pubsub.create();\r\n    var currentPage = 1;\r\n    var totalPages = 31;\r\n\r\n    return {\r\n        setTotalPages: function(numberOfPages) {\r\n            totalPages = numberOfPages;\r\n        },\r\n        getTotalPages: function() {\r\n            return totalPages;\r\n        },\r\n        getPage: function() {\r\n            return currentPage;\r\n        },\r\n        setPage: function(pageNumber) {\r\n            if(pageNumber < 1) {\r\n                if(currentPage === 1) {\r\n                    return;\r\n                }\r\n\r\n                pageNumber = 1;\r\n            }\r\n\r\n            currentPage = pageNumber;\r\n\r\n            this.Event.publish('page.changed', null, pageNumber);\r\n        },\r\n        Event: PageEvents\r\n    }\r\n});\r\n\n","\ndefine('vendor/require-less/less!components/navigation-bar/style',[],function(){});\n","define('components/navigation-bar/index',[\r\n    'ko',\r\n    'text!components/navigation-bar/template.html',\r\n    'services/signal',\r\n    'services/page-manager',\r\n\r\n    'less!components/navigation-bar/style.less'\r\n], function(ko, template, Signal, PageManager) {\r\n    ko.components.register('navigation-bar', {\r\n        viewModel: (function() {\r\n            var NavigationBar = function() {\r\n                this.pageNumber = ko.observable(PageManager.getPage());\r\n                this.totalPages = 31;\r\n\r\n                this.totalAnswered = 0;\r\n                this.totalQuestions = 31;\r\n            };\r\n\r\n            NavigationBar.prototype.__updatePage = function (page) {\r\n                PageManager.setPage(page);\r\n                this.pageNumber(PageManager.getPage());\r\n            };\r\n\r\n            NavigationBar.prototype.goToPrev = function() {\r\n                var newPage = PageManager.getPage() - 1;\r\n                this.__updatePage(newPage);\r\n            };\r\n\r\n            NavigationBar.prototype.goToNext = function() {\r\n                var newPage = PageManager.getPage() + 1;\r\n                this.__updatePage(newPage);\r\n            };\r\n\r\n            return NavigationBar;\r\n        }()),\r\n\r\n        template: template\r\n    });\r\n});\r\n\n","\ndefine('text!components/side-bar/template.html',[],function () { return '<div class=\"\">\\r\\n\\r\\n</div>\\r\\n';});\n\n","\ndefine('vendor/require-less/less!components/side-bar/style',[],function(){});\n","define('components/side-bar/index',[\r\n    'ko',\r\n    'text!components/side-bar/template.html',\r\n    'services/signal',\r\n    'less!components/side-bar/style.less',\r\n], function(ko, template, Signal) {\r\n    ko.components.register('side-bar', {\r\n        viewModel: (function() {\r\n            var SideBar = function() {\r\n                \r\n            };\r\n\r\n            return SideBar;\r\n        }()),\r\n\r\n        template: template\r\n    });\r\n});\r\n\n","\ndefine('text!components/presentation-view/template.html',[],function () { return '<div class=\"\">\\r\\n\\r\\n</div>\\r\\n';});\n\n","\ndefine('vendor/require-less/less!components/presentation-view/style',[],function(){});\n","define('components/presentation-view/index',[\r\n    'ko',\r\n    'text!components/presentation-view/template.html',\r\n    'services/signal',\r\n    'less!components/presentation-view/style.less'\r\n], function(ko, template, Signal) {\r\n    ko.components.register('presentation-view', {\r\n        viewModel: (function() {\r\n            var PresentationView = function() {\r\n\r\n            };\r\n\r\n            return PresentationView;\r\n        }()),\r\n        template: template\r\n    });\r\n});\r\n\n","define('components/application-main/index',[\r\n    'ko',\r\n    'text!components/application-main/template.html',\r\n    'services/signal',\r\n    'less!components/application-main/style.less',\r\n\r\n    // load components\r\n    'components/navigation-bar/index',\r\n    'components/side-bar/index',\r\n    'components/presentation-view/index'\r\n], function(ko, template, Signal) {\r\n    ko.components.register('application-main', {\r\n        viewModel: (function() {\r\n            var ApplicationMain = function() {\r\n\r\n            };\r\n\r\n            return ApplicationMain;\r\n        }()),\r\n\r\n        template: template\r\n    });\r\n});\r\n\n","require.config({\n    baseUrl: '/',\n    urlArgs: \"bust=\" + (new Date()).getTime(),\n\n    paths: {\n        components: 'app/components',\n        services: 'app/services',\n\n        jquery: \"vendor/jquery/dist/jquery\",\n        ko: \"vendor/knockout/dist/knockout.debug\",\r\n        pubsub: \"vendor/pubsubjs/pubsub\",\r\n\n        text: \"vendor/text/text\",\r\n    },\n    shim: {\n        pubsub: {\n            exports: \"Pubsub\"\n        }\n    },\n    map: {\n        '*': {\n            'less': 'vendor/require-less/less' // path to less\r\n        }\n    }\r\n});\n\nrequire(['ko', 'components/application-main/index'], function(ko) {\r\n    ko.applyBindings();\r\n});\r\n\ndefine(\"app/main\", function(){});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('application-main{display:block;width:100%;height:100%;overflow:hidden}navigation-bar{display:table-row;position:absolute;top:0;left:0;right:0;height:80px;background:#5b83ad;color:#fff}navigation-bar .nav-bar-positioning{height:100%;float:left;line-height:60px;box-sizing:border-box;padding:10px}navigation-bar .nav-right{text-align:right}navigation-bar .nav-center,navigation-bar .nav-left,navigation-bar .nav-right{width:10%;height:100%;float:left;line-height:60px;box-sizing:border-box;padding:10px}navigation-bar .nav-center{width:80%;text-align:center;line-height:30px}navigation-bar h1{margin:0}presentation-view,side-bar{display:block;position:absolute;top:80px;bottom:0}side-bar{width:150px;background:#000;left:0}presentation-view{background:#ffffe0;left:150px;right:0}');\n"]}